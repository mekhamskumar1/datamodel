--------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
---------SECTION A PARTICIPANTINFORMATION-----------------------------------------------------------------------------------

--Reference Table for Marital Status


CREATE TABLE LOC_DATA.MARITAL_STATUS (

    MARITAL_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    STATUS VARCHAR2(50) UNIQUE NOT NULL
);
 
INSERT INTO LOC_DATA.MARITAL_STATUS (STATUS) VALUES ('Single');
INSERT INTO LOC_DATA.MARITAL_STATUS (STATUS) VALUES ('Married');
INSERT INTO LOC_DATA.MARITAL_STATUS (STATUS) VALUES ('Divorced');
INSERT INTO LOC_DATA.MARITAL_STATUS (STATUS) VALUES ('Widowed');

--Reference Table for Partipicant Race with Many to Many relationships


CREATE TABLE LOC_DATA.RACE (

    RACE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RACE_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('American Indian or Alaskan Native');
INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('Asian'); 
INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('Black or African American');
INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('White');
INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('Native Hawaiian or Other Pacific Islander');
INSERT INTO LOC_DATA.RACE (RACE_NAME) VALUES ('Other');

--Reference Table for Language


CREATE TABLE LOC_DATA."LANGUAGE" (

    LANGUAGE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    LANGUAGE_NAME VARCHAR2(100) UNIQUE NOT NULL
);
 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('English');
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Spanish'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Russian'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Somali');
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Laotian'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Serbian');
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Nepalese'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Arabic');
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Cantonese'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Mandarin');
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Estonian,'); 
INSERT INTO LOC_DATA."LANGUAGE" (LANGUAGE_NAME) VALUES ('Other');

---Reference Table for Veteran Status


CREATE TABLE LOC_DATA.VETERAN_STATUS (

    VETERAN_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    STATUS VARCHAR2(50) UNIQUE NOT NULL
);

 
INSERT INTO LOC_DATA.VETERAN_STATUS (STATUS) VALUES ('No'); 
INSERT INTO LOC_DATA.VETERAN_STATUS (STATUS) VALUES ('Both'); 
INSERT INTO LOC_DATA.VETERAN_STATUS (STATUS) VALUES ('Spouse'); 
INSERT INTO LOC_DATA.VETERAN_STATUS (STATUS) VALUES ('Self');
	

--Primary Table
CREATE TABLE LOC_DATA.PARTICIPANT (

    PARTICIPANT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(100) NOT NULL,
    MIDDLE_INITIAL VARCHAR2(10),
    LAST_NAME VARCHAR2(100) NOT NULL,
    NICKNAME VARCHAR2(50),
    DATE_OF_BIRTH DATE NOT NULL,
    AGE NUMBER NOT NULL,
    SEX VARCHAR2(10) NOT NULL CHECK (SEX IN ('MALE', 'FEMALE')),
    MARITAL_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.MARITAL_STATUS(MARITAL_STATUS_ID),
    SSN VARCHAR2(20) UNIQUE,
    PERMANENT_ADDRESS VARCHAR2(255) NOT NULL,
    CITY VARCHAR2(100 )NOT NULL,
    "STATE" VARCHAR2(50) NOT NULL,
    ZIP_CODE VARCHAR2(20) NOT NULL,
    COUNTY VARCHAR2(100) NOT NULL,
    PHONE_HOME VARCHAR2(20),
    PHONE_CELL VARCHAR2(20),
    EMAIL VARCHAR2(100),
    PREFERRED_LANGUAGE_ID NUMBER NOT NULL REFERENCES LOC_DATA."LANGUAGE"(LANGUAGE_ID),
    INTERPRETER_REQUIRED CHAR(1) DEFAULT 'N' CHECK (INTERPRETER_REQUIRED IN ('Y', 'N')),
    VETERAN_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.VETERAN_STATUS(VETERAN_STATUS_ID),
	VA_HEALTHCARE_REGISTERED CHAR(1) CHECK (VA_HEALTHCARE_REGISTERED IN ('Y','N')) ,
    VETERAN_COMMENTS CLOB,
	OTHER_LANGUAGE VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);






----Junction Table



CREATE TABLE LOC_DATA.PARTICIPANT_RACE_XREF (

    PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT(PARTICIPANT_ID) ON DELETE CASCADE,
    RACE_ID NUMBER NOT NULL REFERENCES LOC_DATA.RACE(RACE_ID) ON DELETE CASCADE,
    PRIMARY KEY (PARTICIPANT_ID, RACE_ID),
	OTHER_RACE VARCHAR2(200),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


-- Reference Table for Partipicant Language with Many to Many Relationships


CREATE TABLE LOC_DATA.PARTICIPANT_LANGUAGE_XREF (

    PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT(PARTICIPANT_ID) ON DELETE CASCADE,
    LANGUAGE_ID NUMBER NOT NULL REFERENCES LOC_DATA."LANGUAGE"(LANGUAGE_ID) ON DELETE CASCADE,
	OTHER_SPOKEN_LANGUAGE VARCHAR2(100),
    PRIMARY KEY (PARTICIPANT_ID, LANGUAGE_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

CREATE TABLE LOC_DATA.FORM_TYPE
(
FORM_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
FORM_TYPE VARCHAR2(10)
);

INSERT INTO LOC_DATA.FORM_TYPE (FORM_TYPE) VALUES ('CA'); 
INSERT INTO LOC_DATA.FORM_TYPE (FORM_TYPE) VALUES ('LOC');



-- Reference Table for Assessment Type


CREATE TABLE LOC_DATA.ASSESSMENT_TYPE (

    ASSESSMENT_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSESSMENT_TYPE_NAME VARCHAR2(100) NOT NULL,
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
    CONSTRAINT UQ_ASSESSMENT_TYPE UNIQUE(ASSESSMENT_TYPE_NAME, FORM_TYPE_ID)
);
 
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Initial Assessment','1');
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Reassessment','1'); 
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Significant Change','1'); 
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Assessment Validation and/or Update','1');
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Initial LOC Assessment','2');
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('LOC Reassessment','2'); 
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('Significant Change','2'); 
INSERT INTO LOC_DATA.ASSESSMENT_TYPE (ASSESSMENT_TYPE_NAME,FORM_TYPE_ID) VALUES ('LOC Validation and/or Update','2');



--Reference Table for SOURCE_OF_ASSESSMENT

CREATE TABLE LOC_DATA.SOURCE_OF_ASSESSMENT (

    SOURCE_OF_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SOURCE_OF_ASSESSMENT_NAME VARCHAR2(100) UNIQUE NOT NULL
);
 
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Individual');
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Family'); 
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Physician'); 
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Medical Record');
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Primary Caregiver');
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Legal Guardian');
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Provider');
INSERT INTO LOC_DATA.SOURCE_OF_ASSESSMENT (SOURCE_OF_ASSESSMENT_NAME) VALUES ('Other');



CREATE TABLE LOC_DATA.PLACE_OF_ASSESSMENT (
    PLACE_OF_ASSESSMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PLACE_OF_ASSESSMENT_NAME VARCHAR2(100) UNIQUE NOT NULL
);


INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Home');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Hospital');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Residential Treatment Facility(RTF)');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Virtual');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('NF');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('ICF/IID');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Telephonic');
INSERT INTO LOC_DATA.PLACE_OF_ASSESSMENT (PLACE_OF_ASSESSMENT_NAME) VALUES ('Other');



--Table for LOC-NF details

CREATE TABLE LOC_DATA.LOC_NURSING_FACILITY_DETAILS (

    NF_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.ASSESSMENT (ASSESSMENT_ID) ON DELETE CASCADE, 
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
    NURSING_FACILITY_NAME VARCHAR2(200),
    NURSING_FACILITY_ADDRESS VARCHAR2(255),
    CITY VARCHAR2(100),
    "STATE" VARCHAR2(50),
    ZIPCODE VARCHAR(20),
    PHONE VARCHAR2(20),
    FAX VARCHAR2(50),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);
--Reference Table for Assessment 

CREATE TABLE LOC_DATA.ASSESSMENT (
    ASSESSMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT(PARTICIPANT_ID) ON DELETE CASCADE,
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
    ASSESSMENT_AGENCY VARCHAR2(255) NOT NULL,
    ASSESSMENT_BEGIN_DATE DATE NOT NULL,
    ASSESSMENT_FINALIZED_DATE DATE,
    ASSESSOR_FIRST_NAME VARCHAR2(100),
    ASSESSOR_LAST_NAME VARCHAR2(100),
    REFERRAL_DATE DATE,
    APPLICATION_ID NUMBER,
	STATUS VARCHAR2(20),
    ASSESSMENT_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.ASSESSMENT_TYPE(ASSESSMENT_TYPE_ID) ON DELETE CASCADE,
	PLACE_OF_ASSESSMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PLACE_OF_ASSESSMENT(PLACE_OF_ASSESSMENT_ID) ON DELETE CASCADE,
	OTHER_PLACE_OF_ASSESSMENT VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
);


CREATE TABLE LOC_DATA.PROGRAM (

    PROGRAM_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PROGRAM_NAME VARCHAR2(100),
    IS_WAVIER VARCHAR2(20),
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
	CONSTRAINT UQ_PROGRAM UNIQUE(PROGRAM_NAME, FORM_TYPE_ID)
);


 INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('Assisted Living Waiver', 'Wavier','1');
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('PASSPORT Waiver','Wavier','1'); 
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('Other','Non-Wavier','1'); 
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('Assisted Living Waiver', 'Wavier','2');
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('PASSPORT Waiver','Wavier','2'); 
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('PACE Program', 'Wavier','2'); 
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('MyCare Waiver', 'Wavier','2');
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('Nursing Facility', 'Non-Wavier','2');
INSERT INTO LOC_DATA.PROGRAM (PROGRAM_NAME,IS_WAVIER,FORM_TYPE_ID) VALUES ('Other','Non-Wavier','2'); 



--Junction table for Program source of assessment for LOC

CREATE TABLE LOC_DATA.ASSESSMENT_PROGRAM_XREF(

    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PROGRAM_ID NUMBER REFERENCES LOC_DATA.PROGRAM(PROGRAM_ID) ON DELETE CASCADE,
    OTHER_PROGRAM VARCHAR(255),
    PRIMARY KEY(ASSESSMENT_ID,PROGRAM_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

SELECT * FROM PROGRAM


--Junction Table FOR SOURCE_OF_ASSESSMENT with ASSESSMENT

CREATE TABLE LOC_DATA.ASSESSMENT_SOURCE_OF_ASSESSMENT_XREF(

    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID),
    SOURCE_OF_ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.SOURCE_OF_ASSESSMENT(SOURCE_OF_ASSESSMENT_ID),
    PRIMARY KEY(ASSESSMENT_ID, SOURCE_OF_ASSESSMENT_ID),
	OTHER_SOURCE_OF_ASSESSMENT VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

-- Reference Table for Additional participants of Assessment participant.


CREATE TABLE LOC_DATA.ADDITIONAL_PARTICIPANT (

    ADDITIONAL_PARTICIPANT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSESSMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.ASSESSMENT (ASSESSMENT_ID) ON DELETE CASCADE, 
    PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT(PARTICIPANT_ID) ON DELETE CASCADE, 
    IS_ADDITIONAL_PARTICIPANT CHAR(1) DEFAULT 'N' NOT NULL CHECK (IS_ADDITIONAL_PARTICIPANT IN ('Y','N')) ,
    PARTICIPANT_FIRST_NAME  VARCHAR2(100),
    PARTICIPANT_LAST_NAME  VARCHAR2(100),
    RELATIONSHIP_TO_INDIVIDUAL VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);





--Reference Table for Insurance


CREATE TABLE LOC_DATA.INSURANCE (

    INSURANCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    MEDICARE_PART_A CHAR(1) CHECK (MEDICARE_PART_A IN ('Y','N')) ,
    MEDICARE_PART_B CHAR(1) CHECK (MEDICARE_PART_B IN ('Y','N')) ,
    MEDICARE_PART_D CHAR(1) CHECK (MEDICARE_PART_D IN ('Y','N')),
	MEDICARE_PART_D_PLAN_NAME VARCHAR2(255),
    MEDICARE_ADVANTAGE CHAR(1) CHECK (MEDICARE_ADVANTAGE IN ('Y','N')),
    MEDICARE_ADVANTAGE_PLAN VARCHAR2(255),  -- Plan name if applicable
    MEDICAID_NUMBER_CHECK CHAR(1) CHECK (MEDICAID_NUMBER_CHECK IN ('Y','N')) ,
    MEDICAID_NUMBER VARCHAR2(50),
    MEDICAID_PATIENT_LIABILITY CHAR(1) CHECK (MEDICAID_PATIENT_LIABILITY IN ('Y','N')) ,
    MEDICAID_PATIENT_LIABILITY_AMT NUMBER(10,2),  -- Monthly liability
    MEDICAID_MANAGED_CARE_PLAN CHAR(1) CHECK (MEDICAID_MANAGED_CARE_PLAN IN ('Y','N')) ,
    MEDICAID_CARE_PLAN_NAME VARCHAR2(255),
    MEDICAID_MYCARE_OHIO_PLAN CHAR(1)  CHECK (MEDICAID_MYCARE_OHIO_PLAN IN ('Y','N')) ,
    MEDICAID_MYCARE_OHIO_PLAN_NAME VARCHAR2(255),
	OHIO_BENEFITS_NUMBER VARCHAR2(50),
    COMMERCIAL_INSURANCE CHAR(1) CHECK (COMMERCIAL_INSURANCE IN ('Y','N')) ,
    COMMERCIAL_INSURANCE_CARRIER VARCHAR2(255),
    POLICY_MEMBER_ID VARCHAR2(100),
    MEMBER_SERVICES_PHONE VARCHAR2(20),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


--INDEXES
CREATE INDEX IDX_PARTICIPANT_NAME ON LOC_DATA.PARTICIPANT(FIRST_NAME, LAST_NAME);
CREATE INDEX IDX_ASSESSMENT_PARTICIPANT ON LOC_DATA.ASSESSMENT(PARTICIPANT_ID);
CREATE INDEX IDX_INSURANCE_ASSESSMENT ON LOC_DATA.INSURANCE(ASSESSMENT_ID);



-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION B CONTACT INFORMATION--------------------------------------------------------------------------------- 



 ---CONTACT STATUS 



CREATE TABLE LOC_DATA.CONTACT_STATUS (
  
    CONTACT_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
    STATUS_NAME VARCHAR2(50) UNIQUE NOT NULL
);  
INSERT INTO LOC_DATA.CONTACT_STATUS (STATUS_NAME) VALUES ('Active'); 
INSERT INTO LOC_DATA.CONTACT_STATUS (STATUS_NAME) VALUES ('Inactive'); 



--PRIMARY TABLE 


CREATE TABLE LOC_DATA.CONTACT (
 
    CONTACT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    FIRST_NAME VARCHAR2(100) NOT NULL, 
    MIDDLE_NAME VARCHAR2(100),
    LAST_NAME VARCHAR2(100) NOT NULL, 
    EMAIL VARCHAR2(100), 
    PHONE_HOME VARCHAR2(20), 
    PHONE_MOBILE VARCHAR2(20), 
    PHONE_WORK VARCHAR2(20), 
    ADDRESS VARCHAR2(255), 
    CITY VARCHAR2(100), 
    "STATE" VARCHAR2(50), 
    ZIP_CODE VARCHAR2(20), 
    COUNTY VARCHAR2(100), 
    APARTMENT_UNIT VARCHAR2(100),
    CONTACT_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.CONTACT_STATUS(CONTACT_STATUS_ID),
	IS_PRIMARY_CONTACT CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_PRIMARY_CONTACT IN ('Y','N')),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 
 

--RELATIONSHIP TYPE 

CREATE TABLE LOC_DATA.RELATIONSHIP_TYPE (
 
    RELATIONSHIP_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    RELATIONSHIP_NAME VARCHAR2(200) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Parent');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Child'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Sibling');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Spouse'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Significant Other'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Dormitory RA'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Halfway House Staff');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Friend'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Neighbor');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Grandparent');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Other Relative');  
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Room mate'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Clinical Staff'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('ICF/IID Facility Staff');     
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Case Manager'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Group Home Staff'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Hospital DC Planner'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Prison'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('Social Worker'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('School Staff'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES ('CDJFS Case Worker'); 
INSERT INTO LOC_DATA.RELATIONSHIP_TYPE (RELATIONSHIP_NAME) VALUES('Nursing Facility Staff'); 

 

--- JUNCTION TABLE	 



CREATE TABLE LOC_DATA.ASSESSMENT_CONTACT_RELATIONSHIP_XREF (
 
    CONTACT_ID NUMBER NOT NULL REFERENCES LOC_DATA.CONTACT (CONTACT_ID) ON DELETE CASCADE, 
    RELATIONSHIP_ID NUMBER NOT NULL REFERENCES LOC_DATA.RELATIONSHIP_TYPE(RELATIONSHIP_ID) ON DELETE CASCADE, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PRIMARY KEY (CONTACT_ID, RELATIONSHIP_ID,ASSESSMENT_ID) ,
    OTHER_RELATION_TYPE VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--LEGAL RELATIONSHIP TYPE 


CREATE TABLE LOC_DATA.LEGAL_RELATIONSHIP_TYPE (
 
    LEGAL_RELATIONSHIP_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    LEGAL_RELATIONSHIP_NAME VARCHAR2(200) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Primary Caregiver'); 
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Caregiver'); 
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Authorized Representative'); 
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Representative Payee'); 
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Power of Attorney – Financial');  
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Power of Attorney – Healthcare');  
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Social Support'); 
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Legal Guardian');  
INSERT INTO LOC_DATA.LEGAL_RELATIONSHIP_TYPE (LEGAL_RELATIONSHIP_NAME) VALUES ('Other Legal Role'); 


--- JUNCTION TABLE 

CREATE TABLE LOC_DATA.ASSESSMENT_CONTACT_LEGAL_RELATIONSHIP_XREF (
 
    CONTACT_ID NUMBER NOT NULL REFERENCES LOC_DATA.CONTACT (CONTACT_ID) ON DELETE CASCADE, 
    LEGAL_RELATIONSHIP_ID NUMBER NOT NULL REFERENCES LOC_DATA.LEGAL_RELATIONSHIP_TYPE(LEGAL_RELATIONSHIP_ID) ON DELETE CASCADE, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PRIMARY KEY (ASSESSMENT_ID,CONTACT_ID, LEGAL_RELATIONSHIP_ID) ,
    OTHER_LEGAL_RELATIONSHIP_TYPE VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 

 

-- RESIDENCE TYPE  

CREATE TABLE LOC_DATA.RESIDENCE_TYPE (
 
    RESIDENCE_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    RESIDENCE_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Home/Apartment Alone'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Home with Spouse/Significant Other'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Home/Apartment with Others');  
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Group Home'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Halfway House');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Residential Treatment Facility');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('ICF/IID or Developmental Center');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Nursing Facility'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Psychiatric Hospital');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Adult Foster Home');  
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Adult Family Home (3-5 beds)');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Residential Care Facility (Assisted Living)');  
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Dormitory'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Prison'); 
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Homeless Shelter');   
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('No permanent residence (homeless)');
INSERT INTO LOC_DATA.RESIDENCE_TYPE (RESIDENCE_NAME) VALUES ('Other'); 


--DISCHARGE PLACE TYPE 



CREATE TABLE LOC_DATA.DISCHARGE_PLACE_TYPE (
 
    DISCHARGE_PLACE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    DISCHARGE_PLACE_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Home/Apartment Alone');  
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Home with Spouse/Significant Other');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Home/Apartment with Others'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Group Home'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Halfway House');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Residential Treatment Facility');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('ICF/IID or Developmental Center');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Nursing Facility'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Psychiatric Hospital');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Adult Foster Home'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Adult Family Home (3-5 beds)');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Residential Care Facility (Assisted Living)');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Dormitory'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Prison'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Homeless Shelter');   
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('No permanent residence (homeless)'); 
INSERT INTO LOC_DATA.DISCHARGE_PLACE_TYPE (DISCHARGE_PLACE_NAME) VALUES ('Other');


-- LIVING SITUATION 


CREATE TABLE LOC_DATA.LIVING_SITUATION (
  
    LIVING_SITUATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    RESIDENCE_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.RESIDENCE_TYPE(RESIDENCE_TYPE_ID),   
    INSTITUTIONAL_PLACEMENT CHAR(1)  DEFAULT 'N' CHECK (INSTITUTIONAL_PLACEMENT IN ('Y', 'N')),  
    IS_DISCHARGE_PLACE_KNOWN CHAR(1) CHECK (IS_DISCHARGE_PLACE_KNOWN IN ('Y', 'N')),  
    DISCHARGE_DATE DATE,  
    DISCHARGE_PLACE_ID NUMBER REFERENCES LOC_DATA.DISCHARGE_PLACE_TYPE(DISCHARGE_PLACE_ID),  
    COMMENTS CLOB,  
    OTHER_DISCHARGE_PLACE VARCHAR2(255),
    OTHER_RESIDENCE_TYPE VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 


-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION C COMMUNICATION VISION----------------------------------------------------------------------------------- 

 



-- HEARING STATUS 



CREATE TABLE LOC_DATA.HEARING_STATUS (
 
    HEARING_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    HEARING_STATUS VARCHAR2(50) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.HEARING_STATUS (HEARING_STATUS) VALUES ('Hears adequately'); 
INSERT INTO LOC_DATA.HEARING_STATUS (HEARING_STATUS) VALUES ('Minimal difficulty'); 
INSERT INTO LOC_DATA.HEARING_STATUS (HEARING_STATUS) VALUES ('Absence of useful hearing'); 
INSERT INTO LOC_DATA.HEARING_STATUS (HEARING_STATUS) VALUES ('Reacts to sound'); 

 
-- HEARING SUPPORT 



CREATE TABLE LOC_DATA.HEARING_SUPPORT (
 
    HEARING_SUPPORT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    HEARING_SUPPORT VARCHAR2(50) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.HEARING_SUPPORT (HEARING_SUPPORT) VALUES ('Hearing aid'); 
INSERT INTO LOC_DATA.HEARING_SUPPORT (HEARING_SUPPORT) VALUES ('Assistive listening device'); 
INSERT INTO LOC_DATA.HEARING_SUPPORT (HEARING_SUPPORT) VALUES ('Cochlear implant'); 
INSERT INTO LOC_DATA.HEARING_SUPPORT (HEARING_SUPPORT) VALUES ('Other receptive technique');	 
 



-- UNDERSTANDING ABILITY 



CREATE TABLE LOC_DATA.UNDERSTANDING_ABILITY (
 
    UNDERSTANDING_ABILITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    UNDERSTANDING_ABILITY VARCHAR2(100) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.UNDERSTANDING_ABILITY (UNDERSTANDING_ABILITY) VALUES ('Understands'); 
INSERT INTO LOC_DATA.UNDERSTANDING_ABILITY (UNDERSTANDING_ABILITY) VALUES ('Usually understands – may miss some parts/intent of message'); 
INSERT INTO LOC_DATA.UNDERSTANDING_ABILITY (UNDERSTANDING_ABILITY) VALUES ('Sometimes understands – responds adequately to simple, direct communication'); 
INSERT INTO LOC_DATA.UNDERSTANDING_ABILITY (UNDERSTANDING_ABILITY) VALUES ('Rarely/never understands'); 

 
--SPEECH CLARITY 



CREATE TABLE LOC_DATA.SPEECH_CLARITY (
 
    SPEECH_CLARITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    SPEECH_CLARITY VARCHAR2(50) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.SPEECH_CLARITY (SPEECH_CLARITY) VALUES  ('Clear speech'); 
INSERT INTO LOC_DATA.SPEECH_CLARITY (SPEECH_CLARITY) VALUES  ('Unclear speech – slurred, mumbled words'); 
INSERT INTO LOC_DATA.SPEECH_CLARITY (SPEECH_CLARITY) VALUES  ('No speech – absence of spoken words'); 
INSERT INTO LOC_DATA.SPEECH_CLARITY (SPEECH_CLARITY) VALUES ('Unable to make needs known by any means');



--MODES OF EXPRESSION 



CREATE TABLE LOC_DATA.MODE_OF_EXPRESSION (
  
    MODE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
    "MODE" VARCHAR2(100) UNIQUE NOT NULL
);  

 
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Speech');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Signs/gestures/sounds');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Writing');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Communication board');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('American Sign Language (ASL) or Braille');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Interpreter');  
INSERT INTO LOC_DATA.MODE_OF_EXPRESSION ("MODE") VALUES ('Speech-generating device'); 



-- VISION STATUS 



CREATE TABLE LOC_DATA.VISION_STATUS (
 
    VISION_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    VISION_STATUS VARCHAR2(255) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.VISION_STATUS (VISION_STATUS) VALUES  
 ('Sees adequately – no visual impairment'); 
INSERT INTO LOC_DATA.VISION_STATUS (VISION_STATUS) VALUES 
 ('Minimal difficulty – can see larger print or headlines, but not regular print'); 
INSERT INTO LOC_DATA.VISION_STATUS (VISION_STATUS) VALUES 
 ('Moderate difficulty – vision is limited, unable to read print but can identify objects'); 
INSERT INTO LOC_DATA.VISION_STATUS (VISION_STATUS) VALUES 
 ('Severe impairment – eyes appear to follow shapes, can see only lights or colors'); 
INSERT INTO LOC_DATA.VISION_STATUS (VISION_STATUS) VALUES 
 ('No useful vision'); 

 
--VISION SUPPORT 



CREATE TABLE LOC_DATA.VISION_SUPPORT (
 
    VISION_SUPPORT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    VISION_SUPPORT VARCHAR2(100) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.VISION_SUPPORT (VISION_SUPPORT) VALUES ('Has corrective lenses'); 
INSERT INTO LOC_DATA.VISION_SUPPORT (VISION_SUPPORT) VALUES ('Uses Visual aid(s)'); 
INSERT INTO LOC_DATA.VISION_SUPPORT (VISION_SUPPORT) VALUES ('Uses Specialized computer software/hardware'); 
INSERT INTO LOC_DATA.VISION_SUPPORT (VISION_SUPPORT) VALUES ('No visual supports in place'); 

 

--MAKING SELF UNDERSTOOD 



CREATE TABLE LOC_DATA.MAKING_SELF_UNDERSTOOD (
 
    MAKING_SELF_UNDERSTOOD_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    "DESCRIPTION" VARCHAR2(200) UNIQUE NOT NULL
); 

INSERT INTO LOC_DATA.MAKING_SELF_UNDERSTOOD (DESCRIPTION) VALUES ('Understood'); 
INSERT INTO LOC_DATA.MAKING_SELF_UNDERSTOOD (DESCRIPTION) VALUES ('Usually understood – difficulty finding words or finishing thoughts'); 
INSERT INTO LOC_DATA.MAKING_SELF_UNDERSTOOD (DESCRIPTION) VALUES ('Sometimes understood – ability is limited to making concrete requests'); 
INSERT INTO LOC_DATA.MAKING_SELF_UNDERSTOOD (DESCRIPTION) VALUES ('Rarely/never understood'); 


    
-- PRIMARY TABLE 



CREATE TABLE LOC_DATA.COMMUNICATION_VISION (
  
    COMM_VISION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,   
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE, 
    HEARING_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.HEARING_STATUS(HEARING_STATUS_ID),   
    HEARING_SUPPORT_ID NUMBER NOT NULL REFERENCES LOC_DATA.HEARING_SUPPORT(HEARING_SUPPORT_ID ),  
    UNDERSTANDING_ABILITY_ID NUMBER NOT NULL REFERENCES LOC_DATA.UNDERSTANDING_ABILITY   (UNDERSTANDING_ABILITY_ID),   
    SPEECH_CLARITY_ID NUMBER NOT NULL REFERENCES LOC_DATA.SPEECH_CLARITY(SPEECH_CLARITY_ID),   
    VISION_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.VISION_STATUS(VISION_STATUS_ID),  
    MAKING_SELF_UNDERSTOOD_ID NUMBER NOT NULL REFERENCES LOC_DATA.MAKING_SELF_UNDERSTOOD(MAKING_SELF_UNDERSTOOD_ID),   
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

--- JUNCTION TABLE FOR MANY TO MANY RELATIONSHIPS 

CREATE TABLE LOC_DATA.ASSESSMENT_VISION_SUPPORT_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    VISION_SUPPORT_ID NUMBER NOT NULL REFERENCES LOC_DATA.VISION_SUPPORT(VISION_SUPPORT_ID) ON DELETE CASCADE, 
	COMM_VISION_ID NUMBER NOT NULL REFERENCES LOC_DATA.COMMUNICATION_VISION(COMM_VISION_ID) ON DELETE CASCADE,
    PRIMARY KEY ( VISION_SUPPORT_ID,COMM_VISION_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 
 

 
--- JUNCTION TABLE FOR MANY TO MANY RELATIONSHIPS 

CREATE TABLE LOC_DATA.ASSESSMENT_MODE_OF_EXPRESSION_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    MODE_ID NUMBER NOT NULL REFERENCES LOC_DATA.MODE_OF_EXPRESSION(MODE_ID) ON DELETE CASCADE, 
    COMM_VISION_ID NUMBER NOT NULL REFERENCES LOC_DATA.COMMUNICATION_VISION(COMM_VISION_ID) ON DELETE CASCADE, 
    PRIMARY KEY ( MODE_ID,COMM_VISION_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 



--INDEXES 

CREATE INDEX IDX_COMM_VISION_ASSESSMENT ON COMMUNICATION_VISION(ASSESSMENT_ID);  
CREATE INDEX IDX_HEARING_STATUS ON LOC_DATA.HEARING_STATUS(HEARING_STATUS);  
CREATE INDEX IDX_VISION_STATUS ON LOC_DATA.VISION_STATUS(VISION_STATUS);  
CREATE INDEX IDX_MODES_EXPRESSION ON LOC_DATA.MODE_OF_EXPRESSION("MODE"); 



--------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
---------SECTION D HEALTH INFORMATION-----------------------------------------------------------------------------------
-- Provider


CREATE TABLE LOC_DATA.PROVIDER (

    PROVIDER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    IS_PRIMARY_CARE_PROVIDER CHAR(1) DEFAULT 'Y' CHECK (IS_PRIMARY_CARE_PROVIDER IN ('Y', 'N')),
    FIRST_NAME VARCHAR2(100) NOT NULL,
    MIDDLE_NAME VARCHAR2(100),
    LAST_NAME VARCHAR2(100) NOT NULL,
    "TYPE" VARCHAR2(100) NOT NULL,
    "ADDRESS" VARCHAR2(255),
	BUILDINGORUNIT VARCHAR2(50),
    CITY VARCHAR2(100),
    "STATE" VARCHAR2(50),
    ZIP_CODE VARCHAR2(20),
	COUNTY VARCHAR2(50),
    PHONE_PRIMARY VARCHAR2(20),
    PHONE_SECONDARY VARCHAR2(20),
    FAX VARCHAR2(20),
    EMAIL VARCHAR2(100),
    LAST_SEEN_DATE DATE,
    OTHER_INFORMATION CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

--Primary Table


CREATE TABLE LOC_DATA.ADVANCE_DIRECTIVES (
 
    HEALTH_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    LIVING_WILL CHAR(1) DEFAULT 'N' CHECK (LIVING_WILL IN ('Y', 'N')),
    DO_NOT_RESUSCITATE CHAR(1) CHECK (DO_NOT_RESUSCITATE IN ('Y', 'N')) ,
    INTERESTED_IN_HEALTHCARE_DIRECTIVES CHAR(1) DEFAULT 'N' CHECK (INTERESTED_IN_HEALTHCARE_DIRECTIVES IN ('Y', 'N')) ,
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
 
);

--Pharmacy INFORMATION


CREATE TABLE LOC_DATA.PHARMACY (

    PHARMACY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PHARMACY_NAME VARCHAR2(255) NOT NULL,
    PHONE_NUMBER VARCHAR2(20),
    FAX_NUMBER VARCHAR2(20),
    "ADDRESS" VARCHAR2(255),
    CITY VARCHAR2(100),
    "STATE" VARCHAR2(50),
    ZIP_CODE VARCHAR2(20),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);




-- DIAGNOSE SOURCE


CREATE TABLE LOC_DATA.DIAGNOSIS_SOURCE (

    DIAGNOSIS_SOURCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SOURCE_NAME VARCHAR2(100) UNIQUE NOT NULL
);


INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Family');
INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Medical Record');
INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Caregiver');
INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Individual');
INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Physician');
INSERT INTO LOC_DATA.DIAGNOSIS_SOURCE (SOURCE_NAME) VALUES ('Other');

CREATE TABLE LOC_DATA.ASSESSMENT_DIAGNOSIS_SOURCE_XREF
(
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    DIAGNOSIS_SOURCE_ID NUMBER NOT NULL REFERENCES LOC_DATA.DIAGNOSIS_SOURCE(DIAGNOSIS_SOURCE_ID),
	PRIMARY KEY (ASSESSMENT_ID,DIAGNOSIS_SOURCE_ID),
    OTHER_DIAGNOSIS_SOURCE CLOB,
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

--DIAGNOSE

----------RENAMED IS_DIAGNOSIS_INDIVIDUAL TO IS_INDIVIDUAL_HAVE_ANY_DIAGNOSIS

CREATE TABLE LOC_DATA.DIAGNOSE (

    DIAGNOSIS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    IS_INDIVIDUAL_HAVE_ANY_DIAGNOSIS CHAR(1) DEFAULT 'N' CHECK (IS_INDIVIDUAL_HAVE_ANY_DIAGNOSIS IN ('Y', 'N')) ,
	COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


-- DIAGNOSE List---REFERENCE FOR ICD-10 CODES


CREATE TABLE LOC_DATA.DIAGNOSIS_LIST (

    DIAGNOSIS_LIST_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    DIAGNOSIS_CODE VARCHAR2(255) UNIQUE NOT NULL,-- ICD-10 Code for standardization
    EXPANDED_VALUE VARCHAR2(255), ------DIAGNOSES NAME 
	COUNT_CD_CLIENT_DIAGNOSIS_ID NUMBER

);

INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('T88.8', 'Other', 1073214);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I10', 'Hypertension', 382268);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M15.9', 'Arthritis (Osteo)', 241136);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E11.9', 'Diabetes', 233159);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F32.9', 'Depression', 172291);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J44.9', 'COPD (Chronic Obstructive Pulmonary Disease)', 148093);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E78.5', 'Hyperlipidemia', 133712);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K21.9', 'GERD', 128877);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F41.9', 'Anxiety Disorder', 117458);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I50.9', 'CHF (Congestive Heart Failure)', 86851);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F03.90', 'Dementia (Senile)', 76353);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E03.9', 'Hypothyroidism', 66982);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I63.9', 'CVA (Cerebral Vascular Accident)', 65997);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I25.10', 'CAD (Coronary Artery Disease)', 61759);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R53.1', 'Generalized Weakness', 60119);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J45.909', 'Asthma', 58830);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I48.0', 'Atrial Fibrillation', 58731);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('C80.1', 'Cancer Carcinoma Neoplasm', 53117);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D64.9', 'Anemia', 53094);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E78.0', 'Hypercholesterolemia', 50965);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R32', 'Urinary Incontinence', 49132);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('T14.8', 'Fracture', 48620);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G47.30', 'Sleep Apnea', 47377);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M81.0', 'Osteoporosis', 43662);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E66.9', 'Obesity', 42222);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R60.9', 'Edema', 38341);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G62.9', 'Peripheral Neuropathy', 37244);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H90.50', 'Hard of Hearing', 36150);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M06.9', 'Arthritis (Rheumatoid)', 34954);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H26.9', 'Cataract', 34215);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N17.9', 'Renal Failure', 34032);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R42', 'Vertigo', 29154);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M19.90', 'DJD (Degenerative Joint Disease)', 28904);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M79.7', 'Fibromyalgia', 28028);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F31.9', 'Bipolar Disorder', 28004);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G47.00', 'Insomnia', 27867);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H40.9', 'Glaucoma', 27600);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I21.3', 'Myocardial Infarct (MI) Heart Attack', 27577);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N39.0', 'UTI (Urinary Tract Infection)', 23879);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M10.9', 'Gout', 22676);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R56.9', 'Seizure Disorder', 22356);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R06.02', 'Shortness of Breath', 22134);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K59.00', 'Constipation', 21614);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H35.30', 'Macular Degeneration', 18981);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G45.9', 'TIA (Transient Ischemic Attack)', 18879);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I99.9', 'Peripheral Vascular Disease', 17974);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Z96.65', 'Knee Replacement', 17735);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G30.9', 'Alzheimer''s Disease', 17070);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F20.9', 'Schizophrenia', 16966);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I69.3', 'Stroke', 16638);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H54.0', 'Blindness', 15185);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Z89.9', 'Amputation', 14863);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J43.9', 'Emphysema', 14826);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J18.9', 'Pneumonia', 14549);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K58.9', 'Irritible Bowel Syndrome ', 14540);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G20', 'Parkinson''s Disease', 14500);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R13.10', 'Dysphagia', 13608);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R25.1', 'Tremors', 12943);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G43.909', 'Migraine Headache', 12649);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K46.9', 'Hernia', 12245);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L03.90', 'Cellulitis', 11680);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G81.9', 'Hemiplegia', 11364);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K57.92', 'Diverticulitis', 11151);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G56.0', 'Carpal Tunnel Syndrome', 11134);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N42.9', 'Prostate Disease', 10312);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Z96.64', 'Hip Replacement', 10029);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E05.90', 'Hyperthyroidism', 9982);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I72.9', 'Aneurysm', 9679);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I82.40', 'Deep Vein Thrombosis', 9616);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q82.0', 'Lymphedema', 9025);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M41.9', 'Scoliosis', 8447);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F25.9', 'Schizoaffective Disorder', 8101);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I70.91', 'ASHD (Arteriosclerotic Heart Disease)', 8023);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G35', 'Multiple Sclerosis', 7821);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K74.60', 'Cirrhosis', 7795);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G40.909', 'Epilepsy', 7793);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I95.9', 'Hypotension', 7719);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K75.9', 'Hepatitis', 7713);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F10.10', 'Alcohol Abuse', 7634);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J40', 'Bronchitis', 7525);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I20.9', 'Angina', 7487);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I49.9', 'Arrhythmia (Cardiac)', 7260);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R51', 'Headache', 6948);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E87.6', 'Hypokalemia', 6795);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R47.01', 'Aphasia', 6594);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E46', 'Malnutrition', 6249);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R15.9', 'Fecal Incontinence', 6199);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K44.9', 'Hiatal Hernia', 6047);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L98.499', 'Ulcer(Skin)', 5226);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L89.9', 'Ulcer(Pressure)', 5219);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I74.9', 'Embolism', 5151);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K57.90', 'Diverticulosis', 5144);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M32.0', 'Lupus', 5108);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R19.7', 'Diarrhea', 5054);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L40.9', 'Psoriasis', 5005);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R55', 'Syncope', 4980);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('S06.9', 'Traumatic Brain Injury', 4940);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M51.26', 'Herniated Disc', 4299);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K52.9', 'Colitis', 4252);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R00.0', 'Tachycardia', 4235);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A41.9', 'Sepsis', 4070);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R41.0', 'Confusion', 3749);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R63.4', 'Weight loss', 3730);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R33.9', 'Urinary Retention', 3650);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E11.319', 'Retinopathy (Diabetic)', 3496);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L30.9', 'Eczema', 3364);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M71.9', 'Bursitis', 3074);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R73.9', 'Hyperglycemia', 3018);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F41.0', 'Panic Disorder', 3001);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R01.1', 'Heart Murmur', 2947);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G82.20', 'Paraplegia', 2936);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M48.9', 'Spondylitis', 2934);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R00.1', 'Bradycardia', 2910);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K64.9', 'Hemorrhoids', 2874);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G80.9', 'Cerebral Palsy', 2841);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K29.70', 'Gastritis', 2825);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I70.90', 'Arteriosclerosis', 2742);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H91.9', 'Deafness', 2697);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R09.02', 'Hypoxia', 2623);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F31.4', 'Bipolar Disorder-depressive', 2388);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F90.9', 'ADHD', 2259);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I99.8', 'Vascular Insufficiency', 2247);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K25.9', 'Ulcer(Stomach)', 2220);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('L30.8', 'Dermatitis', 2212);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N31.9', 'Neurogenic Bladder', 2192);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E16.2', 'Hypoglycemia', 2148);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I34.1', 'Mitral Valve Prolapse', 2138);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F42', 'Obsessive Compulsive Disorder', 2100);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('C95.9', 'Leukemia', 2011);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K63.3', 'Ulcer(Intestinal)', 1937);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E86.0', 'Dehydration', 1871);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F10.20', 'Alcohol Addiction', 1718);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q25.3', 'Aortic Stenosis', 1625);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I82.90', 'Thrombosis', 1613);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I65.2', 'Carotid Stenosis', 1613);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F29', 'Psychotic Disorder NOS', 1434);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G82.50', 'Quadraplegia', 1404);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G51.0', 'Bell''s Palsy', 1365);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I73.00', 'Raynaud''s Syndrome', 1291);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A15.9', 'Tuberculosis', 1226);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('H81.0', 'Meniere''s Disease', 1174);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q03.9', 'Hydrocephalus', 1145);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E04.9', 'Goiter', 1141);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R63.0', 'Anorexia', 1117);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I25.9', 'Ischemic Heart Disease (Acute/Subacute)', 1095);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K27.4', 'Ulcer(Bleeding)', 1045);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G04.90', 'Encephalitis', 1022);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K92.2', 'Hemorrhage of Gastro-Intest tract', 915);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F22', 'Paranoia', 911);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F31.89', 'Bipolar Disorder-manic', 849);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F60.9', 'Personality Disorder', 845);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F60.3', 'Borderline Personality Disorder', 830);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A80.9', 'Poliomyelitis', 792);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K20.9', 'Esophogitis', 763);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('B00.9', 'Herpes', 747);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R45.1', 'Agitation', 736);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K27.9', 'Peptic Ulcer', 693);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M60.9', 'Myositis', 685);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F79', 'Retardation (Mental)', 669);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F31.60', 'Bipolar Disorder-mixed', 651);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J81.1', 'Pulmonary Edema', 634);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('S06.5X', 'Subdural Hematoma', 606);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I96', 'Gangrene', 599);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R10.13', 'Dyspepsia', 599);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q05.9', 'Spina Bifida', 560);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M88.9', 'Paget''s Disease', 528);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F84.0', 'Autism', 488);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M40.209', 'Kyphosis', 426);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D57.1', 'Sickle Cell Anemia', 411);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M35.3', 'Polymyalgia Rheumatica (PMR)', 391);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('B20', 'AIDS (Acquired Immunodeficiency VIRUS)', 375);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G10', 'Huntington''s Chorea', 358);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J11.1', 'Influenza', 357);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G03.90', 'Meningitis', 325);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I80.8', 'Thrombophlebitis', 292);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E84.9', 'Fibrocystic Disease', 291);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('S09.90', 'Closed Head Injury', 280);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G93.9', 'Brain Lesion', 248);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F19.20', 'Poly Substance Abuse', 241);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R53.83', 'Exhaustion', 240);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I38', 'Endocarditis', 222);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F60.7', 'Dependent Personality Disorder', 209);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R09.1', 'Pleurisy', 204);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D66', 'Hemophelia', 197);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F89', 'Retardation (Developmental)', 193);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('K62.3', 'Prolapsed Rectum', 178);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F60.2', 'Antisocial Personality Disorder', 172);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I80.9', 'Phlebitis (Inc. Leg W/Leg Ulcers)', 171);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('I95.1', 'Postural Hypotension', 168);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F63.9', 'Impulse Contraol Disorder', 165);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('J98.11', 'Atelectasis', 158);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('M79.3', 'Panniculitis', 138);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A53.9', 'Syphilis', 134);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q90.9', 'Down''s Syndrome', 129);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R09.01', 'Anoxia', 127);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Z85.71', 'Hodgkin''s Disease', 126);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E87.80', 'Electrolyte and Fluid Imbalance', 125);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('G61.0', 'Barre''-Guillian Syndrome', 112);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N19', 'Uremia', 109);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F09', 'Organic Brain Syndrome', 108);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F48.9', 'Neurosis', 104);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A02.9', 'Salmonella', 90);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F63.81', 'Intermittent Explosive Disorder', 71);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E34.3', 'Dwarfism', 63);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R50.9', 'Fever', 56);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('B54', 'Malaria', 53);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('Q87.40', 'Marfan''s Syndrome', 46);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D18.09', 'Angioma', 45);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D49.6', 'Cerebral Neoplasm', 39);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('E55.0', 'Rickets', 35);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A54.3', 'Gonorrhea', 22);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('T73.0', 'Starvation', 21);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A18.01', 'Pott''s (CURVATURE)', 20);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('N05.9', 'Glomerulonephritis', 16);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('D47.1', 'Myeloproliferative Syndrome', 7);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('T46.0X4', 'Digoxin Toxicity', 6);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('F84.9', 'Pervasive Developmental Disorder', 3);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('R68.89', 'Toxemia', 3);
INSERT INTO LOC_DATA.DIAGNOSIS_LIST (DIAGNOSIS_CODE, EXPANDED_VALUE, COUNT_CD_CLIENT_DIAGNOSIS_ID) VALUES ('A00.9', 'Cholera', 3);

--- Junction Table for diagnosis


CREATE TABLE LOC_DATA.ASSESSMENT_DIAGNOSE_XREF (

    DIAGNOSIS_LIST_ID NUMBER NOT NULL REFERENCES LOC_DATA.DIAGNOSIS_LIST(DIAGNOSIS_LIST_ID) ON DELETE CASCADE,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PRIMARY KEY ( DIAGNOSIS_LIST_ID,ASSESSMENT_ID),
	DESCRIPTION CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

-- Health Self Assessment - In general, would you say your health is


CREATE TABLE LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (

    HEALTH_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSESSMENT_VALUE VARCHAR2(50) UNIQUE NOT NULL
);

-- Insert predefined responses
INSERT INTO LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (ASSESSMENT_VALUE) VALUES ('Excellent');
INSERT INTO LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (ASSESSMENT_VALUE) VALUES ('Very Good');
INSERT INTO LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (ASSESSMENT_VALUE) VALUES ('Good');
INSERT INTO LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (ASSESSMENT_VALUE) VALUES ('Fair');
INSERT INTO LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION (ASSESSMENT_VALUE) VALUES ('Poor');
   
-- Reference Table


CREATE TABLE LOC_DATA.ASSESSMENT_HEALTH_SELF_ASSESSMENT_XREF (

    HEALTH_ASSESSMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.HEALTH_SELF_ASSESSMENT_OPTION(HEALTH_ASSESSMENT_ID),
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    ASSESSMENT_DATE DATE DEFAULT SYSDATE, 
    PRIMARY KEY ( HEALTH_ASSESSMENT_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

--Medication route


CREATE TABLE LOC_DATA.MEDICATION_ROUTE (

    ROUTE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ROUTE_NAME VARCHAR2(100) UNIQUE NOT NULL
);


INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('By mouth/oral(PO))');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Intramuscular (IM)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Inhalant (IH)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Sublingual (under the tongue) (SL)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES (' J, J/G, PEG, NGT Tube type (JGT))');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Intravenous (IV)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Topical (TOP)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Subcutaneous (SQ)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Per Rectum (PR)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Enteral Tube(ET)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Drops (GTT)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Eye (EYE)');
INSERT INTO LOC_DATA.MEDICATION_ROUTE (ROUTE_NAME) VALUES ('Other(OTH)');

-- Medication / Administration




CREATE TABLE LOC_DATA.MEDICATION_ADMINISTRATION
(
      MEDICATION_ADMINISTRATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
      ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
      CURRENTLY_TAKE_MEDICATION CHAR(1)  DEFAULT 'N' CHECK (CURRENTLY_TAKE_MEDICATION IN ('Y', 'N')) ,
      COMMENTS CLOB,
	  IS_ACTIVE NUMBER(1),
      CREATED_BY NUMBER NOT NULL,
      CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
      UPDATED_BY NUMBER,
      UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

-----------RENAMED IS_CURRENT_MEDICATION TO CURRENTLY_TAKE_MEDICATION


CREATE TABLE LOC_DATA.MEDICATION (

    MEDICATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    MEDICATION_NAME VARCHAR2(255) NOT NULL,
    DRUG_TYPE CHAR(3) CHECK (DRUG_TYPE IN ('RX', 'OTC')) NOT NULL, 
    DOSE VARCHAR2(100),
    FREQUENCY VARCHAR2(100),
    ROUTE_ID NUMBER NOT NULL REFERENCES LOC_DATA.MEDICATION_ROUTE(ROUTE_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

--Medication Safety



CREATE TABLE LOC_DATA.MEDICATION_HELP_LEVEL (

    HELP_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    HELP_LEVEL_NAME VARCHAR2(100) UNIQUE NOT NULL
);

-- Insert predefined values

INSERT INTO LOC_DATA.MEDICATION_HELP_LEVEL (HELP_LEVEL_NAME) VALUES ('Independent');
INSERT INTO LOC_DATA.MEDICATION_HELP_LEVEL (HELP_LEVEL_NAME) VALUES ('Supervision');
INSERT INTO LOC_DATA.MEDICATION_HELP_LEVEL (HELP_LEVEL_NAME) VALUES ('Assistance');


--Primary Table


CREATE TABLE LOC_DATA.MEDICATION_SAFETY (

    MEDICATION_SAFETY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    REQUIRES_HELP_WITH_MEDICATION CHAR(1) DEFAULT 'N' CHECK (REQUIRES_HELP_WITH_MEDICATION IN ('Y', 'N')) ,
    HELP_LEVEL_ID NUMBER REFERENCES LOC_DATA.MEDICATION_HELP_LEVEL(HELP_LEVEL_ID),
    MONITOR_PERSON_NAME_AND_RELATIONSHIP VARCHAR2(255),
    MEDICATION_SET_UP_PERSON_NAME_AND_FREQUENCY VARCHAR2(255),
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

--Storage Safety


CREATE TABLE LOC_DATA.STORAGE_SAFETY_CONCERN (

    STORAGE_SAFETY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CONCERN_NAME VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined storage concerns
INSERT INTO LOC_DATA.STORAGE_SAFETY_CONCERN (CONCERN_NAME) VALUES ('Storage/Labeling Issue');
INSERT INTO LOC_DATA.STORAGE_SAFETY_CONCERN (CONCERN_NAME) VALUES ('Not Secured from Vulnerable Household Members');
INSERT INTO LOC_DATA.STORAGE_SAFETY_CONCERN (CONCERN_NAME) VALUES ('Lock Box Required');

--Reference table environment areas 


CREATE TABLE LOC_DATA.ASSESSMENT_MEDICATION_STORAGE_XREF (
   
    STORAGE_SAFETY_ID NUMBER NOT NULL REFERENCES LOC_DATA.STORAGE_SAFETY_CONCERN (STORAGE_SAFETY_ID) ON DELETE CASCADE,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    ACCEPTABLE CHAR(1) CHECK (ACCEPTABLE IN ('Y', 'N')),
    SAFETY_EDUCATIONALISSUE_IDENTIFIED CHAR(1) CHECK (SAFETY_EDUCATIONALISSUE_IDENTIFIED IN ('Y', 'N')),
    NOT_APPLICABLE CHAR(1) CHECK (NOT_APPLICABLE IN ('Y', 'N')), 
    COMMENTS CLOB, 
    PRIMARY KEY (STORAGE_SAFETY_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 



 ---Reference Table


CREATE TABLE LOC_DATA.ALLERGY_TYPE (

    ALLERGY_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TYPE_NAME VARCHAR2(100) UNIQUE NOT NULL
);


INSERT INTO LOC_DATA.ALLERGY_TYPE (TYPE_NAME) VALUES ('Medication');
INSERT INTO LOC_DATA.ALLERGY_TYPE (TYPE_NAME) VALUES ('Food');
INSERT INTO LOC_DATA.ALLERGY_TYPE (TYPE_NAME) VALUES ('Environmental');

--ALLERGY


CREATE TABLE LOC_DATA.ALLERGY (

    ALLERGY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    KNOWN_ALLERGY CHAR(1) DEFAULT 'N' CHECK (KNOWN_ALLERGY IN ('Y', 'N')),
    ALLERGY_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.ALLERGY_TYPE(ALLERGY_TYPE_ID),
    ALLERGY_NAME VARCHAR2(255) NOT NULL,
    REACTION VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

-- Substance USE

--Master table Substance Type


CREATE TABLE LOC_DATA.SUBSTANCE_TYPE (

    SUBSTANCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SUBSTANCE_NAME VARCHAR2(100) UNIQUE NOT NULL
);

-- Insert predefined substances
INSERT INTO LOC_DATA.SUBSTANCE_TYPE (SUBSTANCE_NAME) VALUES ('Alcohol');
INSERT INTO LOC_DATA.SUBSTANCE_TYPE (SUBSTANCE_NAME) VALUES ('Caffeine');
INSERT INTO LOC_DATA.SUBSTANCE_TYPE (SUBSTANCE_NAME) VALUES ('Nicotine');
INSERT INTO LOC_DATA.SUBSTANCE_TYPE (SUBSTANCE_NAME) VALUES ('Other');

--Master table Substance Use Status


CREATE TABLE LOC_DATA.SUBSTANCE_USE_STATUS (

    STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    STATUS_NAME VARCHAR2(50) UNIQUE NOT NULL
);

-- Insert predefined values
INSERT INTO LOC_DATA.SUBSTANCE_USE_STATUS (STATUS_NAME) VALUES ('Current Use');
INSERT INTO LOC_DATA.SUBSTANCE_USE_STATUS (STATUS_NAME) VALUES ('Historical Use');
INSERT INTO LOC_DATA.SUBSTANCE_USE_STATUS (STATUS_NAME) VALUES ('Never Used');

-- Primary Reference Table for Substance Use


CREATE TABLE LOC_DATA.SUBSTANCE_USE_HISTORY (

    SUBSTANCE_USE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    SUBSTANCE_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUBSTANCE_TYPE(SUBSTANCE_ID) ON DELETE CASCADE,
    USE_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUBSTANCE_USE_STATUS(STATUS_ID) ON DELETE CASCADE,
    AMOUNT VARCHAR2(50),  
    FREQUENCY VARCHAR2(50), 
    LAST_USE_DATE DATE, 
    DRINKS_4PLUS_DAYS NUMBER,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

CREATE TABLE LOC_DATA.RECOVERY_PROGRAM (

    RECOVERY_PROGRAM_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	OTHER_SUBSTANCE_USE_HISTORY CLOB, 
	IN_RECOVERY_PROGRAM CHAR(1) DEFAULT 'N' CHECK (IN_RECOVERY_PROGRAM IN ('Y', 'N')) ,
    PROGRAM_DETAILS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);



-- Cognitive impairment


CREATE TABLE LOC_DATA.COGNITIVE_SUPPORT_LEVEL (

    SUPPORT_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SUPPORT_LEVEL_NAME VARCHAR2(100) UNIQUE NOT NULL
);

-- Insert predefined values
INSERT INTO LOC_DATA.COGNITIVE_SUPPORT_LEVEL (SUPPORT_LEVEL_NAME) VALUES ('24-hour support required');
INSERT INTO LOC_DATA.COGNITIVE_SUPPORT_LEVEL (SUPPORT_LEVEL_NAME) VALUES ('Less than 24-hour support required');
INSERT INTO LOC_DATA.COGNITIVE_SUPPORT_LEVEL (SUPPORT_LEVEL_NAME) VALUES ('No support required');

-- Primary Reference Table for Cognitive impairment


CREATE TABLE LOC_DATA.COGNITIVE_IMPAIRMENT (

    COGNITIVE_IMPAIRMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    SUPPORT_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.COGNITIVE_SUPPORT_LEVEL(SUPPORT_LEVEL_ID),
	COMMENTS_SUPPORT_LEVEL CLOB,
    UNABLE_TO_SELF_REPORT CHAR(1) DEFAULT 'N' CHECK (UNABLE_TO_SELF_REPORT IN ('Y', 'N')),
    COMMENTS_SELF_REPORT CLOB, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


--Indexes for better performance
CREATE INDEX IDX_HEALTH_ASSESSMENT ON LOC_DATA.HEALTH_INFORMATION(ASSESSMENT_ID);
CREATE INDEX IDX_PROVIDER_ASSESSMENT ON LOC_DATA.PROVIDER(ASSESSMENT_ID);
CREATE INDEX IDX_PROVIDER_NAME ON LOC_DATA.PROVIDER(LAST_NAME, FIRST_NAME);
CREATE INDEX IDX_PROVIDER_TYPE ON LOC_DATA.PROVIDER(PROVIDER_TYPE_ID);
CREATE INDEX IDX_DIAGNOSIS_ASSESSMENT ON LOC_DATA.DIAGNOSE(ASSESSMENT_ID);
CREATE INDEX IDX_DIAGNOSIS_NAME ON LOC_DATA.DIAGNOSE(DIAGNOSIS_NAME);
CREATE INDEX IDX_DIAGNOSIS_SOURCE ON LOC_DATA.DIAGNOSE(DIAGNOSIS_SOURCE_ID);
CREATE INDEX IDX_MEDICATION_ASSESSMENT ON LOC_DATA.MEDICATION(ASSESSMENT_ID);
CREATE INDEX IDX_MEDICATION_NAME ON LOC_DATA.MEDICATION(MEDICATION_NAME);
CREATE INDEX IDX_MEDICATION_ROUTE ON LOC_DATA.MEDICATION(ROUTE_ID);
CREATE INDEX IDX_ALLERGY_ASSESSMENT ON LOC_DATA.ALLERGY(ASSESSMENT_ID);
CREATE INDEX IDX_ALLERGY_NAME ON LOC_DATA.ALLERGY(ALLERGY_NAME);
CREATE INDEX IDX_ALLERGY_TYPE ON LOC_DATA.ALLERGY(ALLERGY_TYPE_ID);
CREATE INDEX IDX_DIRECTIVE_ASSESSMENT ON LOC_DATA.ADVANCE_DIRECTIVES(ASSESSMENT_ID);
CREATE INDEX IDX_SUBSTANCE_USE_ASSESSMENT ON LOC_DATA.SUBSTANCE_USE_HISTORY(ASSESSMENT_ID);
CREATE INDEX IDX_SUBSTANCE_TYPE ON LOC_DATA.SUBSTANCE_USE_HISTORY(SUBSTANCE_ID);
CREATE INDEX IDX_USE_STATUS ON LOC_DATA.SUBSTANCE_USE_HISTORY(USE_STATUS_ID);


-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION E ADLS----------------------------------------------------------------------------------- 

 

--ADL CATEGORIES 



CREATE TABLE LOC_DATA.ADL_TYPE (
 
    ADL_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    ADL_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- INSERT PREDEFINED ADLS 

INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Bathing (Cleansing, rinsing, drying)'); 
INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Dressing (Putting on/taking off including clothing and prosthetics, Fastening/unfastening)'); 
INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Grooming (Hair care, nail care, oral care)');  
INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Mobility (Bed mobility, locomotion, transfers)'); 
INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Eating (Putting food in mouth, chewing, swallowing, or self-manage feeding tube)'); 
INSERT INTO LOC_DATA.ADL_TYPE (ADL_NAME) VALUES ('Toileting (Using toilet, bedpan or urinal, changing supplies or hygiene products, cleansing self, managing ostomy or catheter)'); 

 

--ADL ASSISTANCE LEVELS 



CREATE TABLE LOC_DATA.ADL_ASSISTANCE_LEVEL (
 
    ADL_ASSISTANCE_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    ASSISTANCE_LEVEL_NAME VARCHAR2(100) UNIQUE NOT NULL
); 


-- INSERT PREDEFINED VALUES 

INSERT INTO LOC_DATA.ADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Independent'); 
INSERT INTO LOC_DATA.ADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Supervision'); 
INSERT INTO LOC_DATA.ADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Assistance'); 

--PRIMARY REFERENCE TABLE 



CREATE TABLE LOC_DATA.ADL_ASSESSMENT (
 
    ADL_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    ADL_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.ADL_TYPE(ADL_TYPE_ID) ON DELETE CASCADE, 
    ADL_ASSISTANCE_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.ADL_ASSISTANCE_LEVEL(ADL_ASSISTANCE_LEVEL_ID), 
	NEEDS_ADDITIONAL_ASSISTANCE CHAR(1) CHECK (NEEDS_ADDITIONAL_ASSISTANCE IN ('Y', 'N')),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 


CREATE TABLE LOC_DATA.ADL_OBSERVATION (
 
    ADL_OBSERVATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	IS_CONTRADICT CHAR(1) CHECK (IS_CONTRADICT IN ('Y','N')) ,
	OBSERVATION_NOTES CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--INDEXES 

CREATE INDEX IDX_ADL_ASSESSMENT ON LOC_DATA.ADL_ASSESSMENT (ASSESSMENT_ID); 
CREATE INDEX IDX_ADL_TYPE ON LOC_DATA.ADL_ASSESSMENT (ADL_TYPE_ID); 
CREATE INDEX IDX_ADL_ASSESSMENT_TYPE ON LOC_DATA.ADL_ASSESSMENT(ASSESSMENT_ID, ADL_TYPE_ID); 
 

 -------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION F INSTRUMENTAL ACTIVITIES OF DAILY LIVING (IADLS)*----------------------------------------------------------------------------------- 

 

--MASTER FOR IADL TYPES/CATEGORIES 



CREATE TABLE LOC_DATA.IADL_TYPE (
 
    IADL_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    IADL_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

 

-- INSERT PREDEFINED IADLS 

 
INSERT INTO LOC_DATA.IADL_TYPE (IADL_NAME) VALUES ('Personal Laundry'); 
INSERT INTO LOC_DATA.IADL_TYPE (IADL_NAME) VALUES ('Shopping');
INSERT INTO LOC_DATA.IADL_TYPE (IADL_NAME) VALUES ('Meal Preparation (Opening packages, preparing food, cutting food)');  
INSERT INTO LOC_DATA.IADL_TYPE (IADL_NAME) VALUES ('Community Access (Accessing transportation, handling finances, telephoning)'); 
INSERT INTO LOC_DATA.IADL_TYPE (IADL_NAME) VALUES ('Environmental Management (Heavy chores, house cleaning, yard work/maintenance)'); 

 
--MASTER FOR IADL ASSISTANCE LEVELS 



CREATE TABLE LOC_DATA.IADL_ASSISTANCE_LEVEL (
 
    IADL_ASSISTANCE_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    ASSISTANCE_LEVEL_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

 

-- INSERT PREDEFINED VALUES 

INSERT INTO LOC_DATA.IADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Independent');  
INSERT INTO LOC_DATA.IADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Supervision'); 
INSERT INTO LOC_DATA.IADL_ASSISTANCE_LEVEL (ASSISTANCE_LEVEL_NAME) VALUES ('Assistance'); 


--PRIMARY REFERENCE TABLE 



CREATE TABLE LOC_DATA.IADL_ASSESSMENT (
 
    IADL_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    IADL_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.IADL_TYPE(IADL_TYPE_ID) ON DELETE CASCADE, 
    IADL_ASSISTANCE_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.IADL_ASSISTANCE_LEVEL(IADL_ASSISTANCE_LEVEL_ID), 
	NEEDS_ADDITIONAL_ASSISTANCE CHAR(1) CHECK (NEEDS_ADDITIONAL_ASSISTANCE IN ('Y', 'N')),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 
--IADL OBSERVATIONS 



CREATE TABLE LOC_DATA.IADL_OBSERVATION (
 
    IADL_OBSERVATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	IS_CONTRADICT CHAR(1) CHECK (IS_CONTRADICT IN ('Y','N')) ,
    OBSERVATION_NOTES CLOB, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 
--INDEXES 

CREATE INDEX IDX_IADL_ASSESSMENT ON LOC_DATA.IADL_ASSESSMENT(ASSESSMENT_ID); 
CREATE INDEX IDX_IADL_TYPE ON LOC_DATA.IADL_ASSESSMENT(IADL_TYPE_ID); 
CREATE INDEX IDX_IADL_ASSESSMENT_TYPE ON LOC_DATA.IADL_ASSESSMENT(ASSESSMENT_ID, IADL_TYPE_ID); 

-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION G. SKILLED SERVICES----------------------------------------------------------------------------------- 

 
--PRIMARY REFERENCE TABLE 



CREATE TABLE LOC_DATA.ASSESSMENT_SKILLED_SERVICE (
    SKILLED_SERVICE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,	
    SKILLED_NURSING_NEEDS CHAR(1) DEFAULT 'N' CHECK ( SKILLED_NURSING_NEEDS IN ('Y', 'N') ) ,  
    COMMENTS_SKILLED_NURSING_NEEDS CLOB,
    SKILLED_THERAPY_NEEDS CHAR(1) DEFAULT 'N' CHECK (SKILLED_THERAPY_NEEDS IN ('Y', 'N')) ,  
    COMMENTS_SKILLED_THERAPY_NEEDS CLOB, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

  
-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION H ASSESSMENT OF MEDICAL STABILITY----------------------------------------------------------------------------------- 

 

-- PRIMARY REFERENCE TABLE 



CREATE TABLE LOC_DATA.MEDICAL_STABILITY (
    MEDICAL_STABILITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    REQUIRES_EXTENSIVE_MONITORING CHAR(1) DEFAULT 'N' CHECK (REQUIRES_EXTENSIVE_MONITORING IN ('Y', 'N')) ,  
    REQUIRES_IMMEDIATE_INTERVENTION CHAR(1) DEFAULT 'N' CHECK (REQUIRES_IMMEDIATE_INTERVENTION IN ('Y', 'N')) ,  
    MEDICAL_CONDITION_STATUS VARCHAR2(10) DEFAULT 'Stable' CHECK (MEDICAL_CONDITION_STATUS IN ('Stable', 'Unstable')) ,  
    COMMENTS_REQUIRES_EXTENSIVE_MONITORING CLOB, 
    COMMENTS_REQUIRES_IMMEDIATE_INTERVENTION CLOB, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

  

 

--MASTER TABLE FOR TYPE OF ER VISIT, HOSPITAL, NF ADIMISSIONS 



CREATE TABLE LOC_DATA.VISIT_TYPE (
 
    VISIT_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    VISIT_TYPE_NAME VARCHAR2(200) UNIQUE NOT NULL
); 

 

-- INSERT PREDEFINED VISIT TYPES 

INSERT INTO LOC_DATA.VISIT_TYPE (VISIT_TYPE_NAME) VALUES ('Emergency Room Visit');  
INSERT INTO LOC_DATA.VISIT_TYPE (VISIT_TYPE_NAME) VALUES ('Urgent Care Visit'); 
INSERT INTO LOC_DATA.VISIT_TYPE (VISIT_TYPE_NAME) VALUES ('Hospital Admission'); 
INSERT INTO LOC_DATA.VISIT_TYPE (VISIT_TYPE_NAME) VALUES  ('Behavioral Health Facility Admission'); 
INSERT INTO LOC_DATA.VISIT_TYPE (VISIT_TYPE_NAME) VALUES ('Nursing Facility Admission'); 

 
--PRIMARY REFERENCE TABLE --FOR EACH VISIT TYPE, CHECKBOX YES OR NO DEPENDS ON THE RECORD INSERTED HERE 



CREATE TABLE LOC_DATA.MEDICAL_VISIT  (
 
    VISIT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    VISIT_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.VISIT_TYPE(VISIT_TYPE_ID) ON DELETE CASCADE,
    NUMBER_OF_VISITS_LAST_12_MONTHS NUMBER,
    HAS_VISITED_LAST_12_MONTHS CHAR(1) DEFAULT 'N' CHECK (HAS_VISITED_LAST_12_MONTHS IN ('Y', 'N')) ,  
    VISIT_REASON VARCHAR2(255),
    FACILITY_NAME_CITY VARCHAR2(255),
    LAST_ADMISSION_DATE DATE, 
    LAST_DISCHARGE_DATE DATE, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--INDEXES 
CREATE INDEX IDX_MEDICAL_VISITS_ASSESSMENT ON LOC_DATA.MEDICAL_VISIT (ASSESSMENT_ID); 
CREATE INDEX IDX_MEDICAL_VISIT_TYPE ON LOC_DATA.MEDICAL_VISIT (VISIT_TYPE_ID); 
CREATE INDEX IDX_MEDICAL_VISIT_REASON ON LOC_DATA.MEDICAL_VISIT (VISIT_REASON); 


 -------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION I. SCREENINGS----------------------------------------------------------------------------------- 

 

--DEVELOPMENTAL DISABILITY SCREEN 

 

--MASTER TABLE FOR DISABILITY TYPE 



CREATE TABLE LOC_DATA.DISABILITY_TYPE (
 
    DISABILITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    DISABILITY_NAME VARCHAR2(100) UNIQUE NOT NULL
); 


-- INSERT PREDEFINED DISABILITIES 

INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Autism'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Traumatic Brain Injury'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Intellectual Disability'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Epilepsy'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Blindness');  
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Cerebral Palsy'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Deafness'); 
INSERT INTO LOC_DATA.DISABILITY_TYPE (DISABILITY_NAME) VALUES ('Other'); 

  -- JUNCTION TABLE  



CREATE TABLE LOC_DATA.ASSESSMENT_DISABILITIES_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    DISABILITY_ID NUMBER NOT NULL REFERENCES LOC_DATA.DISABILITY_TYPE (DISABILITY_ID) ON DELETE CASCADE, 
    PRIMARY KEY ( DISABILITY_ID,ASSESSMENT_ID),
	OTHER_DISABILITY_NAME VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 

--MASTER FOR FUNCTIONAL IMPAIRMENTS 


CREATE TABLE LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (
 
    IMPAIRMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    IMPAIRMENT_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

 

-- INSERT PREDEFINED IMPAIRMENTS 

INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Self-Care'); 
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Mobility'); 
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Self-Direction');  
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Economic Self Sufficiency');  
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Capacity for Independent Living');  
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Understanding and use of language');  
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Learning');  
INSERT INTO LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE (IMPAIRMENT_NAME) VALUES ('Other'); 


--JUNCTION TABLE  



CREATE TABLE LOC_DATA.ASSESSMENT_FUNCTIONAL_IMPAIRMENT_XREF (
  
    IMPAIRMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.FUNCTIONAL_IMPAIRMENT_TYPE(IMPAIRMENT_ID) ON DELETE CASCADE, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PRIMARY KEY (IMPAIRMENT_ID,ASSESSMENT_ID),
	OTHER_FUNCTIONAL_IMPAIRMENT VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--PRIMARY REFERENCE TABLE 

------RENAMED HAS_DEVELOPMENTAL_DISABILITY  TO HAS_PHYSICAL_MENTAL_DISABILITY

CREATE TABLE LOC_DATA.DEVELOPMENTAL_DISABILITY_SCREENING (
    DEVELOPMENTAL_DISABILITY_SCREENING_ID  NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    HAS_PHYSICAL_MENTAL_DISABILITY CHAR(1) DEFAULT 'N' CHECK (HAS_PHYSICAL_MENTAL_DISABILITY IN ('Y', 'N', 'U')) , -- Y=YES, N=NO, U=UNKNOWN  
    MANIFESTED_BEFORE_AGE_22 CHAR(1) DEFAULT 'U' CHECK (MANIFESTED_BEFORE_AGE_22 IN ('Y', 'N', 'U')) ,  
    CONDITION_CONTINUES_INDEFINITELY CHAR(1) DEFAULT 'U' CHECK (CONDITION_CONTINUES_INDEFINITELY IN ('Y', 'N', 'U')) ,  
    RECEIVED_DD_SERVICES CHAR(1) DEFAULT 'U' CHECK (RECEIVED_DD_SERVICES IN ('Y', 'N', 'U')) ,  
    REQUIRES_LIFELONG_ADL_ASSISTANCE CHAR(1) DEFAULT 'U' CHECK (REQUIRES_LIFELONG_ADL_ASSISTANCE IN ('Y', 'N', 'U')) ,  
    INDICATIONS_OF_DEVELOPMENTAL_DISABILITY CHAR(1) DEFAULT 'N' CHECK (INDICATIONS_OF_DEVELOPMENTAL_DISABILITY IN ('Y', 'N')) ,  
    HAS_FUNCTIONAL_IMPAIRMENTS CHAR(1) DEFAULT 'N' CHECK (HAS_FUNCTIONAL_IMPAIRMENTS IN ('Y', 'N', 'U')) ,  
    COMMENTS CLOB, -- ADDITIONAL REMARKS,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 
-- BEHAVIORIAL ABNORMALITIES 

--- MASTER TABLE FOR TYPE OF BEHAVIORIAL ABNORMALITY 



CREATE TABLE LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (
 
    ABNORMALITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    ABNORMALITY_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

 

-- INSERT PREDEFINED BEHAVIORAL ABNORMALITIES 

INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Hallucinations'); 
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Delusions'); 
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Sleep Disturbance'); 
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Wandering'); 
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Aggression'); 
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Disinhibition');  
INSERT INTO LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE (ABNORMALITY_NAME) VALUES  ('Restlessness'); 

-- PRIMARY REFERENCE TABLE 

--------------RENAMED IS_PRESENT TO BEHAVIORAL_ABNORMALITY_IS_PRESENT

CREATE TABLE LOC_DATA.ASSESSMENT_BEHAVIORAL_ABNORMALITY_XREF (
   
    BEHAVIORAL_ABNORMALITY_IS_PRESENT CHAR(1) CHECK (BEHAVIORAL_ABNORMALITY_IS_PRESENT IN ('Y', 'N')) , 
    ABNORMALITY_ID NUMBER NOT NULL REFERENCES LOC_DATA.BEHAVIORAL_ABNORMALITY_TYPE(ABNORMALITY_ID) ON DELETE CASCADE,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    FREQUENCY VARCHAR2(50), 
    DESCRIPTION CLOB,  
    PRIMARY KEY (ABNORMALITY_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--PRIMARY TABLE   



CREATE TABLE LOC_DATA.BEHAVIORAL_ABNORMALITIES_SCREENING (
    BEHAVIORAL_ABNORMALITIES_SCREENING NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    HAS_BEHAVIORAL_ABNORMALITIES CHAR(1) DEFAULT 'N' CHECK (HAS_BEHAVIORAL_ABNORMALITIES IN ('Y', 'N')) ,  
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--INDEXES 

CREATE INDEX IDX_BEHAVIORAL_ASSESSMENT ON LOC_DATA.BEHAVIORAL_ABNORMALITIES_SCREENING(ASSESSMENT_ID); 
CREATE INDEX IDX_ASSESSMENT_BEHAVIORAL_ABNORMALITY ON LOC_DATA.ASSESSMENT_BEHAVIORAL_ABNORMALITY_XREF (ASSESSMENT_ID, ABNORMALITY_ID); 


--- FALLS SCREEN SUBSECTION--------------

--JUST ONE TABLE  



CREATE TABLE LOC_DATA.FALLS_SCREENING (
    FALLS_SCREENING_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,	
    HAS_FALL_HISTORY CHAR(1) CHECK (HAS_FALL_HISTORY IN ('Y', 'N')),   
    BALANCE_GAIT_ISSUE CHAR(1)  CHECK (BALANCE_GAIT_ISSUE IN ('Y', 'N')),  
    AGE_GREATER_THAN_65 CHAR(1) CHECK (AGE_GREATER_THAN_65 IN ('Y', 'N')) ,  
    FALLING_HISTORY_LAST_YEAR CHAR(1) CHECK (FALLING_HISTORY_LAST_YEAR IN ('Y', 'N')) ,   
    MULTIPLE_CHRONIC_CONDITIONS CHAR(1) CHECK (MULTIPLE_CHRONIC_CONDITIONS IN ('Y', 'N')) ,  
    INCONTINENCE CHAR(1) CHECK (INCONTINENCE IN ('Y', 'N')) ,  
    VISION_IMPAIRMENT CHAR(1) CHECK (VISION_IMPAIRMENT IN ('Y', 'N')),  
    IMPAIRED_MOBILITY CHAR(1) CHECK (IMPAIRED_MOBILITY IN ('Y', 'N')) ,  
    ENVIRONMENTAL_HAZARDS CHAR(1) CHECK (ENVIRONMENTAL_HAZARDS IN ('Y', 'N')),  
    MEDICATION_RISK CHAR(1) CHECK (MEDICATION_RISK IN ('Y', 'N')) ,  
    PAIN_LEVEL_OF_FUNCTION CHAR(1) CHECK (PAIN_LEVEL_OF_FUNCTION IN ('Y', 'N')) ,  
    COGNITIVE_IMPAIRMENT CHAR(1) CHECK (COGNITIVE_IMPAIRMENT IN ('Y', 'N')) ,  
    POSTURAL_HYPOTENSION CHAR(1) CHECK (POSTURAL_HYPOTENSION IN ('Y', 'N')) ,  
    FEAR_OF_FALLING CHAR(1) CHECK (FEAR_OF_FALLING IN ('Y', 'N')) ,  
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  


---TABLES FOR NUTRITIONAL SCREEN * 

--PRIMARY TABLE 

CREATE TABLE LOC_DATA.NUTRITIONAL_SCREENING (
    NUTRITIONAL_SCREENING_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    CURRENT_HEIGHT NUMBER(5,2),   
    CURRENT_WEIGHT NUMBER(6,2),
    RECEIVING_SERVICES_FROM_REGISTERED_DIETICIAN CHAR(1) CHECK (RECEIVING_SERVICES_FROM_REGISTERED_DIETICIAN IN ('Y', 'N')) ,   
    HAS_THERAPEUTIC_DIET  CHAR(1) CHECK (HAS_THERAPEUTIC_DIET IN ('Y', 'N')) ,  
    DIET VARCHAR2(255),
    REQUIRE_THICKENERS_TO_ASSIST_SWALLOWING CHAR(1) CHECK (REQUIRE_THICKENERS_TO_ASSIST_SWALLOWING IN ('Y', 'N')) ,  
    USE_TUBE_FEEDINGS CHAR(1) CHECK (USE_TUBE_FEEDINGS  IN ('Y', 'N')) ,  
    REFERRAL_RECOMMENDED CHAR(1) CHECK (REFERRAL_RECOMMENDED IN ('Y', 'N')) ,  
    COMMENTS CLOB, 
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 

--MASTER FOR 3 MONTHS HEALTH ISSUES 



CREATE TABLE LOC_DATA.EXPERIENCED_IN_LAST_3MONTH (
  
    LAST_3MONTH_ISSUE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,   
    LAST_3MONTH_ISSUE_NAME VARCHAR2(255) UNIQUE NOT NULL
);   

-- INSERT PREDEFINED FOR  3 MONTHS HEALTH ISSUES 

INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_3MONTH  (LAST_3MONTH_ISSUE_NAME) VALUES ('Significant Weight Loss');   
INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_3MONTH (LAST_3MONTH_ISSUE_NAME) VALUES ('Prolonged decrease in appetite with weight loss');  
INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_3MONTH (LAST_3MONTH_ISSUE_NAME) VALUES ('Significant Weight Gain');   
INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_3MONTH (LAST_3MONTH_ISSUE_NAME) VALUES ('N/A'); 

--JUNCTION TABLE MANY TO MANY  



CREATE TABLE LOC_DATA.ASSESSMENT_EXPERIENCED_IN_LAST_3MONTH_XREF  (
  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    LAST_3MONTH_ISSUE_ID NUMBER NOT NULL REFERENCES LOC_DATA.EXPERIENCED_IN_LAST_3MONTH (LAST_3MONTH_ISSUE_ID) ON DELETE CASCADE,   
    PRIMARY KEY ( LAST_3MONTH_ISSUE_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);   


--MASTER FOR LAST MONTH HEALTH ISSUES 



CREATE TABLE LOC_DATA.EXPERIENCED_IN_LAST_MONTH (
  
    LAST_MONTH_ISSUE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
    LAST_MONTH_ISSUE_NAME VARCHAR2(255) UNIQUE NOT NULL
);  

-- INSERT PREDEFINED FOR LAST MONTH HEALTH ISSUES 

INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_MONTH (LAST_MONTH_ISSUE_NAME) VALUES  ('Significant reduction in dietary intake'); 
INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_MONTH (LAST_MONTH_ISSUE_NAME) VALUES  ('Major Abdominal Surgery');  
INSERT INTO LOC_DATA.EXPERIENCED_IN_LAST_MONTH (LAST_MONTH_ISSUE_NAME) VALUES ('N/A'); 

--JUNCTION TABLE MANY TO MANY  


CREATE TABLE LOC_DATA.ASSESSMENT_EXPERIENCED_IN_LAST_MONTH_XREF  (
  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    LAST_MONTH_ISSUE_ID NUMBER NOT NULL REFERENCES LOC_DATA.EXPERIENCED_IN_LAST_MONTH (LAST_MONTH_ISSUE_ID) ON DELETE CASCADE,  
    PRIMARY KEY (LAST_MONTH_ISSUE_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

--MASTER FOR EATING DIFFICULTY 



CREATE TABLE LOC_DATA.EATING_DIFFICULTY_ISSUE (
  
  EATING_DIFFICULTY_ID   NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
  EATING_DIFFICULTY_NAME VARCHAR2(255) UNIQUE NOT NULL
);  

-- INSERT PREDEFINED FOR EATING DIFFICULTY 

INSERT INTO LOC_DATA.EATING_DIFFICULTY_ISSUE ( EATING_DIFFICULTY_NAME) VALUES  ('Biting');  
INSERT INTO LOC_DATA.EATING_DIFFICULTY_ISSUE ( EATING_DIFFICULTY_NAME) VALUES  ('Chewing');  
INSERT INTO LOC_DATA.EATING_DIFFICULTY_ISSUE ( EATING_DIFFICULTY_NAME) VALUES  ('Swallowing');   
INSERT INTO LOC_DATA.EATING_DIFFICULTY_ISSUE ( EATING_DIFFICULTY_NAME) VALUES  ('N/A'); 

--JUNCTION TABLE MANY TO MANY  



CREATE TABLE LOC_DATA.ASSESSMENT_EATING_DIFFICULTY_ISSUE_XREF  (
   
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    EATING_DIFFICULTY_ID NUMBER NOT NULL REFERENCES LOC_DATA.EATING_DIFFICULTY_ISSUE (EATING_DIFFICULTY_ID) ON DELETE CASCADE,  
    PRIMARY KEY (EATING_DIFFICULTY_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

--MASTER TABLE FOR RISK TYPE  



CREATE TABLE LOC_DATA.DIETARY_DISORDER (
  
    DIETARY_DISORDER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
    DIETARY_DISORDER_NAME VARCHAR2(255) UNIQUE NOT NULL
);  
  

-- INSERT PREDEFINED RISK FACTORS  

INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Recurring vomiting');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Severe Nausea');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Chronic Constipation');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Chronic gastro-esophageal reflux (GERD)'); 
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Food aversion');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Food ALLERGYs');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Chronic Diarrhea'); 
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Malabsorption Syndrome');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Cleft palate');  
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Anorexia');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Bulimia');  
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('Diagnosed eating disorder');   
INSERT INTO LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_NAME) VALUES ('N/A');   

-- JUNCTION TABLE  



CREATE TABLE LOC_DATA.ASSESSMENT_DIETARY_DISORDER_XREF (
  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    DIETARY_DISORDER_ID NUMBER NOT NULL REFERENCES LOC_DATA.DIETARY_DISORDER (DIETARY_DISORDER_ID) ON DELETE CASCADE,  
    PRIMARY KEY ( DIETARY_DISORDER_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

------- TABLES FOR DENTAL SCREEN 

-----NEW TABLE FOR STORING TEETH TYPE AS PER REQUEST

CREATE TABLE LOC_DATA.TEETH_TYPE
(
TEETH_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
TEETH_TYPE_NAME VARCHAR2(50) UNIQUE NOT NULL
);

INSERT INTO LOC_DATA.TEETH_TYPE (TEETH_TYPE_NAME) VALUES ('Natural');
INSERT INTO LOC_DATA.TEETH_TYPE (TEETH_TYPE_NAME) VALUES ('Artificial');
INSERT INTO LOC_DATA.TEETH_TYPE (TEETH_TYPE_NAME) VALUES ('Both');
INSERT INTO LOC_DATA.TEETH_TYPE (TEETH_TYPE_NAME) VALUES ('None');


--PRIMARY TABLE 

CREATE TABLE LOC_DATA.DENTAL_SCREENING (
   DENTAL_SCREENING_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
   TEETH_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.TEETH_TYPE (TEETH_TYPE_ID) ON DELETE CASCADE,
    HAS_DENTAL_PROVIDER CHAR(1) CHECK (HAS_DENTAL_PROVIDER IN ('Y', 'N')) ,  
    HAS_LAST_12_MONTHS_DENTAL_VISIT CHAR(1) CHECK (HAS_LAST_12_MONTHS_DENTAL_VISIT IN ('Y', 'N')) ,   
    HAS_BROKEN_TEETH CHAR(1) CHECK (HAS_BROKEN_TEETH IN ('Y', 'N')) ,  
    HAS_MISSING_TEETH CHAR(1) CHECK (HAS_MISSING_TEETH IN ('Y', 'N')),  
    NEEDS_DENTAL_REFERRAL CHAR(1) CHECK (NEEDS_DENTAL_REFERRAL IN ('Y', 'N')) ,  
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

 
--MASTER TABLE FOR DENTURE TYPE 



CREATE TABLE LOC_DATA.DENTURE_TYPE (
 
    DENTURE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    DENTURE_NAME VARCHAR2(50) UNIQUE NOT NULL
); 

-- INSERT PREDEFINED DENTURE TYPES 

INSERT INTO LOC_DATA.DENTURE_TYPE (DENTURE_NAME) VALUES ('Dentures Full'); 
INSERT INTO LOC_DATA.DENTURE_TYPE (DENTURE_NAME) VALUES ('Upper Full'); 
INSERT INTO LOC_DATA.DENTURE_TYPE (DENTURE_NAME) VALUES ('Lower Full');  
INSERT INTO LOC_DATA.DENTURE_TYPE (DENTURE_NAME) VALUES ('Partial'); 
INSERT INTO LOC_DATA.DENTURE_TYPE (DENTURE_NAME) VALUES ('No Artificial Teeth'); 

  ---- JUNCTION TABLE FOR MANY TO MANY

  

CREATE TABLE LOC_DATA.ASSESSMENT_DENTURE_TYPE_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    DENTURE_ID NUMBER NOT NULL REFERENCES LOC_DATA.DENTURE_TYPE(DENTURE_ID) ON DELETE CASCADE, 
    PRIMARY KEY ( DENTURE_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--MASTER FOR TOBACCO USE 



CREATE TABLE LOC_DATA.TOBACCO_USE_TYPE (
 
    TOBACCO_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    TOBACCO_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

-- INSERT PREDEFINED TOBACCO USAGE TYPES 

INSERT INTO LOC_DATA.TOBACCO_USE_TYPE (TOBACCO_NAME) VALUES ('Cigarettes'); 
INSERT INTO LOC_DATA.TOBACCO_USE_TYPE (TOBACCO_NAME) VALUES ('Smoke cigar or pipe'); 
INSERT INTO LOC_DATA.TOBACCO_USE_TYPE (TOBACCO_NAME) VALUES ('Chew or use smokeless tobacco');  
INSERT INTO LOC_DATA.TOBACCO_USE_TYPE (TOBACCO_NAME) VALUES ('Does not smoke');  
INSERT INTO LOC_DATA.TOBACCO_USE_TYPE (TOBACCO_NAME) VALUES ('Does not use tobacco');   

--JUNCTION TABLE MANY TO MANY 



CREATE TABLE LOC_DATA.ASSESSMENT_TOBACCO_USE_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    TOBACCO_ID NUMBER NOT NULL REFERENCES LOC_DATA.TOBACCO_USE_TYPE(TOBACCO_ID) ON DELETE CASCADE, 
    PRIMARY KEY (TOBACCO_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--MASTER FOR ORAL CONDITION 



CREATE TABLE LOC_DATA.ORAL_HEALTH_CONDITION (
 
    CONDITION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    CONDITION_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- INSERT PREDEFINED ORAL HEALTH CONDITIONS 

INSERT INTO LOC_DATA.ORAL_HEALTH_CONDITION (CONDITION_NAME) VALUES ('Swollen or bleeding gums (Gingivitis)');  
INSERT INTO LOC_DATA.ORAL_HEALTH_CONDITION (CONDITION_NAME) VALUES ('Plaque buildup');  
INSERT INTO LOC_DATA.ORAL_HEALTH_CONDITION (CONDITION_NAME) VALUES ('Abscesses, sores, lumps, ulcers or rashes on or near mouth'); 

--JUNCTION TABLE MANY TO MANY 



CREATE TABLE LOC_DATA.ASSESSMENT_ORAL_HEALTH_CONDITION_XREF (
 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    CONDITION_ID NUMBER NOT NULL REFERENCES LOC_DATA.ORAL_HEALTH_CONDITION(CONDITION_ID) ON DELETE CASCADE, 
	HAS_ORAL_HEALTH_CONDITION CHAR(1) CHECK (HAS_ORAL_HEALTH_CONDITION IN ('Y', 'N')),
    PRIMARY KEY (CONDITION_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

---- TABLES FOR INCONTINENCE * 

--MASTER FOR INCONTINENCE TYPE 



CREATE TABLE LOC_DATA.INCONTINENCE_STATUS (
 
    INCONTINENCE_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    INCONTINENCE_TYPE VARCHAR2(10) CHECK (INCONTINENCE_TYPE IN ('Bladder', 'Bowel')) NOT NULL, 
    STATUS_NAME VARCHAR2(255)  NOT NULL,
    CONSTRAINT UQ_INCONTINENCE_TYPE_STATUS UNIQUE(INCONTINENCE_TYPE, STATUS_NAME)
); 
-- INSERT PREDEFINED BLADDER INCONTINENCE STATUSES 

INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bladder', 'Complete Control'); 
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bladder', 'Control with catheter or ostomy'); 
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bladder', 'Occasionally incontinent – less than daily episode of incontinence'); 
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bladder', 'Incontinent – on a daily basis, little to no bladder control');  
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bladder', 'No urine or bladder output in the last 3 days'); 

-- INSERT PREDEFINED BOWEL INCONTINENCE STATUSES 

INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bowel', 'Complete Control');  
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bowel', 'Control with ostomy');  
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bowel', 'Occasionally incontinent – less than daily episode of incontinence'); 
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bowel', 'Incontinent – on a daily basis, little to no bowel control present');  
INSERT INTO LOC_DATA.INCONTINENCE_STATUS (INCONTINENCE_TYPE, STATUS_NAME) VALUES ('Bowel', 'No bowel movement in the last 3 days'); 

--JUNCTION TABLE 



CREATE TABLE LOC_DATA.ASSESSMENT_INCONTINENCE_STATUS_XREF (
  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    INCONTINENCE_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.INCONTINENCE_STATUS(INCONTINENCE_STATUS_ID) ON DELETE CASCADE, 
    PRIMARY KEY (INCONTINENCE_STATUS_ID,ASSESSMENT_ID),
	COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

--INDEXES 
 
CREATE INDEX IDX_ASSESSMENT_INCONTINENCE_STATUS ON LOC_DATA.ASSESSMENT_INCONTINENCE_STATUS_XREF(ASSESSMENT_ID, INCONTINENCE_STATUS_ID); 






-------------------------section J ADAPTIVE/ASSISTIVE EQUIPMENT---------------------------------

--Table for EQUIPMENT DETAILS

CREATE TABLE LOC_DATA.ADAPTIVE_EQUIPMENT
(
   EQUIPMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   EQUIPMENT_NAME VARCHAR2(100)
);


INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('BED');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('MECHANICAL LIFT');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('BATHROOM');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('AMBULATION-RELATED');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('WHEELCHAIR');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('RAMP');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('COMMUNICATION DEVICE');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('RESPIRATORY');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('NUTRITION');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('SERVICE ANIMAL');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT (EQUIPMENT_NAME) VALUES ('OTHER EQUIPMENT');



CREATE TABLE LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE
(
   EQUIPMENT_SUBTYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   EQUIPMENT_ID REFERENCES LOC_DATA.ADAPTIVE_EQUIPMENT(EQUIPMENT_ID),
   EQUIPMENT_SUBTYPE_NAME VARCHAR2(100)

);


INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(1,'Hospital');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(1,'Electric');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(1,'Standard'); 
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(1,'Other');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Hoyer'); 
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Stair'); 
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Car Lift');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Ceiling Lift');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Van');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Tub');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(2,'Porch Lift');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Grab rails');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Hand-held shower');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Shower or tub chair');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Adapted toilet seat');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Transfer bench');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(3,'Hoyer or Tub Transfer');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(4,'Cane');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(4,'Walker');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(4,'Braces');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(4,'Crutches');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(4,'Scooter');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(5,'Electric');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(5,'Manual');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(5,'Lightweight Transport Chair');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(5,'Wheeled mobility device');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(6,'Permanent');
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(6,'Temporary'); 
INSERT INTO LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE (EQUIPMENT_ID, EQUIPMENT_SUBTYPE_NAME) VALUES(6,'Portable');



------------------------Master for Equipment condition 


CREATE TABLE LOC_DATA.EQUIPMENT_CONDITION (

   CONDITION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   CONDITION_NAME VARCHAR2(100) UNIQUE NOT NULL
);

-- Insert predefined equipment conditions 
INSERT INTO LOC_DATA.EQUIPMENT_CONDITION (CONDITION_NAME) VALUES('Excellent');
INSERT INTO LOC_DATA.EQUIPMENT_CONDITION (CONDITION_NAME) VALUES('Good');
INSERT INTO LOC_DATA.EQUIPMENT_CONDITION (CONDITION_NAME) VALUES('Poor');
INSERT INTO LOC_DATA.EQUIPMENT_CONDITION (CONDITION_NAME) VALUES('Needs Repair');
INSERT INTO LOC_DATA.EQUIPMENT_CONDITION (CONDITION_NAME) VALUES('Needs Replacement');


--Master for Equipment Ownership 


CREATE TABLE LOC_DATA.EQUIPMENT_OWNERSHIP (

   OWNERSHIP_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   OWNERSHIP_STATUS VARCHAR2(100) UNIQUE NOT NULL
);

-- Insert predefined ownership statuses 
INSERT INTO LOC_DATA.EQUIPMENT_OWNERSHIP (OWNERSHIP_STATUS) VALUES('Own');
INSERT INTO LOC_DATA.EQUIPMENT_OWNERSHIP (OWNERSHIP_STATUS) VALUES('Owned by NF');
INSERT INTO LOC_DATA.EQUIPMENT_OWNERSHIP (OWNERSHIP_STATUS) VALUES('Lease');
INSERT INTO LOC_DATA.EQUIPMENT_OWNERSHIP (OWNERSHIP_STATUS) VALUES('Information Unavailable');


--Master for funding Source 


CREATE TABLE LOC_DATA.EQUIPMENT_FUNDING_SOURCE (

   FUNDING_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   FUNDING_NAME VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined funding sources 
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Self-Pay');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Medicaid');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Medicaid Waiver');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Medicare');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('County Board of DD');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Dept. of Veterans Affairs');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Commercial Insurance');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('CMH');
INSERT INTO LOC_DATA.EQUIPMENT_FUNDING_SOURCE (FUNDING_NAME) VALUES('Other');



--------JUNCTION TABLE

CREATE TABLE LOC_DATA.ASSESSMENT_HAS_ADAPTIVE_EQUIPMENT_DETAILS_XREF
(
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    HAS_EQUIPMENT_SUBTYPE_ID  NUMBER REFERENCES LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE(EQUIPMENT_SUBTYPE_ID) ON DELETE CASCADE,
	PRIMARY KEY (ASSESSMENT_ID,HAS_EQUIPMENT_SUBTYPE_ID),
	OWNERSHIP_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	CONDITION_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_CONDITION(CONDITION_ID) ON DELETE CASCADE ,
	FUNDING_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
    HAS_ADDITIONAL_EQUIPMENT CHAR(1) CHECK (HAS_ADDITIONAL_EQUIPMENT IN ('Y', 'N')),
	HAS_OTHER_DETAIL VARCHAR2(255),
	EQUIPMENT_COMPANY VARCHAR2(255),
    EQUIPMENT_AGE NUMBER,
	OTHER_FUNDING_SOURCE VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

CREATE TABLE LOC_DATA.ASSESSMENT_NEEDS_ADAPTIVE_EQUIPMENT_DETAILS_XREF
(

	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	NEEDS_EQUIPMENT_SUBTYPE_ID  NUMBER REFERENCES LOC_DATA.ADAPTIVE_EQUIPMENT_SUBTYPE(EQUIPMENT_SUBTYPE_ID) ON DELETE CASCADE,
    PRIMARY KEY (ASSESSMENT_ID,NEEDS_EQUIPMENT_SUBTYPE_ID),
    NEEDS_ADDITIONAL_EQUIPMENT CHAR(1) CHECK (NEEDS_ADDITIONAL_EQUIPMENT IN ('Y', 'N')),
	NEEDS_OTHER_DETAILS VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);
 
 
 ------------------TABLE FOR COMMUNICATION Device
 
 
CREATE TABLE LOC_DATA.COMMUNICATION_DEVICE
(
   COMMUNICATION_DEVICE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   COMMUNICATION_DEVICE_TYPE VARCHAR2(100)
);
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Speech Generating Device');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Cochlear Implant');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Electronic Tablet');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Communication Book');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Assistive Listening');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Hearing Aide');
INSERT INTO LOC_DATA.COMMUNICATION_DEVICE (COMMUNICATION_DEVICE_TYPE) VALUES('Other');



----------------PRIMARY FOR COMMUNICATION Device

CREATE TABLE LOC_DATA.COMMUNICATION_DEVICE_MASTER
(
    COMMUNICATION_DEVICE_MASTER_ID  NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    NEEDS_COMMUNICATION_DEVICE_ID  NUMBER REFERENCES LOC_DATA.COMMUNICATION_DEVICE(COMMUNICATION_DEVICE_ID) ON DELETE   CASCADE ,
    HAS_COMMUNICATION_DEVICE_ID  NUMBER REFERENCES LOC_DATA.COMMUNICATION_DEVICE(COMMUNICATION_DEVICE_ID) ON DELETE   CASCADE ,
	OWNERSHIP_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	CONDITION_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_CONDITION(CONDITION_ID) ON DELETE CASCADE ,
	FUNDING_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
	HAS_OTHER_COMMUNICATION_DEVICE VARCHAR2(100),
	NEEDS_OTHER_COMMUNICATION_DEVICE VARCHAR2(100),
	EQUIPMENT_COMPANY VARCHAR2(255),
    EQUIPMENT_AGE NUMBER,
	OTHER_FUNDING_SOURCE VARCHAR2(100),
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);


-------------------------RESPIRATORY EQUIPMENT

CREATE TABLE LOC_DATA.RESPIRATORY_EQUIPMENT
(
   RESPIRATORY_EQUIPMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   RESPIRATORY_EQUIPMENT_TYPE VARCHAR2(100)
);
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Ventilator');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Oxygen Concentrator');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Suction Machine');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Pulse Oximeter');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Apnea Monitor');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('CPAP');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Cool Mist Machine');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Nebulizer');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Not Applicable');
INSERT INTO LOC_DATA.RESPIRATORY_EQUIPMENT (RESPIRATORY_EQUIPMENT_TYPE) VALUES('Other');


----------------PRIMARY FOR RESPIRATORY EQUIPMENT

CREATE TABLE LOC_DATA.RESPIRATORY_EQUIPMENT_MASTER
(
    RESPIRATORY_EQUIPMENT_MASTER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    NEEDS_RESPIRATORY_EQUIPMENT_ID  NUMBER REFERENCES LOC_DATA.RESPIRATORY_EQUIPMENT(RESPIRATORY_EQUIPMENT_ID) ON DELETE   CASCADE ,
    HAS_RESPIRATORY_EQUIPMENT_ID  NUMBER REFERENCES LOC_DATA.RESPIRATORY_EQUIPMENT(RESPIRATORY_EQUIPMENT_ID) ON DELETE   CASCADE ,
	OWNERSHIP_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	CONDITION_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_CONDITION(CONDITION_ID) ON DELETE CASCADE ,
	FUNDING_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
	EQUIPMENT_COMPANY VARCHAR2(255),
    EQUIPMENT_AGE NUMBER,
	HAS_OTHER_RESPIRATORY_EQUIPMENT VARCHAR2(100),
	NEEDS_OTHER_RESPIRATORY_EQUIPMENT VARCHAR2(100),
	OTHER_FUNDING_SOURCE VARCHAR2(100),
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);
	



-------------------------------TABLE FOR NUTRITION 

CREATE TABLE LOC_DATA.NUTRITION
(
   NUTRITION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   NUTRITION_EQUIPMENT_TYPE VARCHAR2(100)
);
INSERT INTO LOC_DATA.NUTRITION (NUTRITION_EQUIPMENT_TYPE) VALUES('Feeding Pump');
INSERT INTO LOC_DATA.NUTRITION (NUTRITION_EQUIPMENT_TYPE) VALUES('Blood Glucose Monitor');
INSERT INTO LOC_DATA.NUTRITION (NUTRITION_EQUIPMENT_TYPE) VALUES('Other');

----------------PRIMARY FOR NUTRITION

CREATE TABLE LOC_DATA.NUTRITION_MASTER
(
    NUTRITION_MASTER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	NEEDS_NUTRITION_EQUIPMENT  CHAR(1) CHECK (NEEDS_NUTRITION_EQUIPMENT IN ('Y', 'N')),
	HAS_NUTRITION_EQUIPMENT  CHAR(1) CHECK (HAS_NUTRITION_EQUIPMENT IN ('Y', 'N')),
    NEEDS_NUTRITION_ID  NUMBER REFERENCES LOC_DATA.NUTRITION(NUTRITION_ID) ON DELETE   CASCADE ,
    HAS_NUTRITION_ID  NUMBER REFERENCES LOC_DATA.NUTRITION(NUTRITION_ID) ON DELETE   CASCADE ,
	OWNERSHIP_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	CONDITION_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_CONDITION(CONDITION_ID) ON DELETE CASCADE ,
	FUNDING_ID NUMBER REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
	EQUIPMENT_COMPANY VARCHAR2(255),
    EQUIPMENT_AGE NUMBER,
	HAS_OTHER_NUTRITION VARCHAR2(100),
	NEEDS_OTHER_NUTRITION VARCHAR2(100),
	OTHER_FUNDING_SOURCE VARCHAR2(100),
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);




------------------------MASTER TABLE FOR ADAPTIVE EQUIPMENT SCREENING----------------------

CREATE TABLE LOC_DATA.ADAPTIVE_EQUIPMENT_SCREENING (

    SCREENING_ID NUMBER  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,	
    USES_ADAPTIVE_EQUIPMENT CHAR(1)  DEFAULT 'N' CHECK (USES_ADAPTIVE_EQUIPMENT IN ('Y', 'N')),
	COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

------------PRIMARY TABLE FOR SERVICE ANIMAL


CREATE TABLE LOC_DATA.SERVICE_ANIMAL
(
    SERVICE_ANIMAL_ID NUMBER  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    SERVICE_ANIMAL CHAR(10) CHECK (SERVICE_ANIMAL IN ('NEEDED', 'HAS','N/A')),
    SERVICE_ANIMAL_TYPE VARCHAR(100),
    SPECIAL_CONSIDERATION CLOB,
	COMPANY VARCHAR2(255),
	FUNDING_ID NUMBER  NOT NULL REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
	OTHER_FUNDING VARCHAR2(200),
	OWNERSHIP_ID NUMBER  NOT NULL REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);
	
--------------------- PRIMARY FOR OTHER EQUIPMENT

CREATE TABLE LOC_DATA.OTHER_EQUIPMENT_DETAILS
(
    OTHER_EQUIPMENT_DETAILS_ID NUMBER  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    OTHER_EQUIPMENT CHAR(10) CHECK (OTHER_EQUIPMENT IN ('NEEDED', 'HAS')),
    OTHER_EQUIPMENT_DETAILS_DESCRIPTION CLOB,
	EQUIPMENT_COMPANY VARCHAR2(255),
	EQUIPMENT_AGE NUMBER,
	OWNERSHIP_ID NUMBER  NOT NULL REFERENCES LOC_DATA.EQUIPMENT_OWNERSHIP(OWNERSHIP_ID) ON DELETE   CASCADE ,
	CONDITION_ID NUMBER NOT NULL REFERENCES LOC_DATA.EQUIPMENT_CONDITION(CONDITION_ID) ON DELETE CASCADE ,
	FUNDING_ID NUMBER  NOT NULL REFERENCES LOC_DATA.EQUIPMENT_FUNDING_SOURCE(FUNDING_ID) ON DELETE  CASCADE ,
	OTHER_FUNDING VARCHAR2(200),
	OTHER_EQUIPMENT_COMMENTS CLOB,
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);	
	
	

 
---------SECTION K. ENVIRONMENTAL REVIEW*----------------------------------------------------------------------------------- 

--Master table for Home Type 



CREATE TABLE LOC_DATA.HOME_TYPE (
 
    HOME_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    HOME_TYPE_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- Insert predefined home types 

INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('Apartment'); 
INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('Duplex'); 
INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('House'); 
INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('Trailer');  
INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('Condo'); 
INSERT INTO LOC_DATA.HOME_TYPE (HOME_TYPE_NAME) VALUES ('Other'); 

--Master table for Home ownership 



CREATE TABLE LOC_DATA.HOME_OWNERSHIP_STATUS (
 
    OWNERSHIP_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    OWNERSHIP_STATUS VARCHAR2(100) UNIQUE NOT NULL
); 

-- INSERT PREDEFINED OWNERSHIP STATUSES 

INSERT INTO LOC_DATA.HOME_OWNERSHIP_STATUS (OWNERSHIP_STATUS) VALUES ('Own'); 
INSERT INTO LOC_DATA.HOME_OWNERSHIP_STATUS (OWNERSHIP_STATUS) VALUES ('Lease'); 


--MASTER TABLE FOR HOME LEVELS 



CREATE TABLE LOC_DATA.HOME_LEVEL_TYPE (
 
    HOME_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    HOME_LEVEL_NAME VARCHAR2(100) UNIQUE NOT NULL
); 

-- Insert predefined home levels 

INSERT INTO LOC_DATA.HOME_LEVEL_TYPE (HOME_LEVEL_NAME) VALUES ('1 Level'); 
INSERT INTO LOC_DATA.HOME_LEVEL_TYPE (HOME_LEVEL_NAME) VALUES ('2 Levels'); 
INSERT INTO LOC_DATA.HOME_LEVEL_TYPE (HOME_LEVEL_NAME) VALUES ('More than 2 Levels'); 

--Master Table Environment Review Areas ** May need to add more areas here*** 



CREATE TABLE LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (
 
    AREA_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    AREA_NAME VARCHAR2(255) UNIQUE NOT NULL
); 
-- Insert predefined environmental review areas 

INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Enter/Exit Home'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Kitchen Food Prep Area');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Bathroom(s) Safety'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Bedroom(s)'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Living Room'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Electrical'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Plumbing');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Floors'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Stairs'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Fall Risk(s)');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Cleanliness'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Hoarding/Clutter'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Chemical Hazards');   
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Windows'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Heating/Cooling');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_NAME) VALUES ('Emergency Exits');  



CREATE TABLE LOC_DATA.ENVIRONMENTAL_REVIEW
(
  ENVIRONMENTAL_REVIEW_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  ENVIRONMENTAL_REVIEW_TYPE VARCHAR2(255)
  );

INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Neighborhood Safety');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Fire plan'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Carbon monoxide detector');   
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Smoke alarm'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Knowledge of infection control techniques');  
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Individuals who smoke') ; 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('First aid kit'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Weapons secured in home'); 
INSERT INTO LOC_DATA.ENVIRONMENTAL_REVIEW (ENVIRONMENTAL_REVIEW_TYPE) VALUES ('Oxygen storage');  


CREATE TABLE LOC_DATA.ASSESSMENT_ENVIRONMENTAL_REVIEW_XREF
(
     ENVIRONMENTAL_REVIEW_ID NUMBER REFERENCES LOC_DATA.ENVIRONMENTAL_REVIEW(ENVIRONMENTAL_REVIEW_ID) ON DELETE CASCADE,	
	 ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,	
	 IS_ACCEPTABLE CHAR(1) CHECK (IS_ACCEPTABLE IN ('Y', 'N')),  
    IS_REPAIR_IDENTIFIED CHAR(1) CHECK (IS_REPAIR_IDENTIFIED IN ('Y', 'N')) , 
	 COMMENTS CLOB, 
    PRIMARY KEY (ASSESSMENT_ID, ENVIRONMENTAL_REVIEW_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 
	 



------------Master table for Residential STABILITY-------------------------------------------------------- 

CREATE TABLE LOC_DATA.RESIDENTIAL_STABILITY_STATUS (
 
    STABILITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    STABILITY_LEVEL VARCHAR2(255) UNIQUE NOT NULL
); 

-- Insert predefined stability levels 

INSERT INTO LOC_DATA.RESIDENTIAL_STABILITY_STATUS (STABILITY_LEVEL) VALUES ('Housing is stable for the foreseeable future');  
INSERT INTO LOC_DATA.RESIDENTIAL_STABILITY_STATUS (STABILITY_LEVEL) VALUES  
('Housing is relatively stable, or family has moved in the past three months and there are indications of housing problems that might force them to move in the next three months');  
INSERT INTO LOC_DATA.RESIDENTIAL_STABILITY_STATUS (STABILITY_LEVEL) VALUES ('Housing is unstable, multiple moves in the past year'); 
INSERT INTO LOC_DATA.RESIDENTIAL_STABILITY_STATUS (STABILITY_LEVEL) VALUES ('Periods of homelessness in the past six months');  


---- Master table for Safety Risks 

CREATE TABLE LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (
 
    SAFETY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    SAFETY_LEVEL VARCHAR2(255) UNIQUE NOT NULL
); 

 

-- Insert predefined safety levels 

INSERT INTO LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (SAFETY_LEVEL) VALUES  
('Household is safe and secure. Individual is at no identified risk from others.');  
INSERT INTO LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (SAFETY_LEVEL) VALUES  
('Household is safe but concerns exist about safety of the individual in his/her neighborhood'); 
INSERT INTO LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (SAFETY_LEVEL) VALUES  
('Individual is at risk from one or more individuals with access to the household.'); 
INSERT INTO LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (SAFETY_LEVEL) VALUES  
('Individual is in immediate danger from one or more individuals with supervised access.'); 

--Reference table environment areas 



CREATE TABLE LOC_DATA.ASSESSMENT_ENVIRONMENTAL_ISSUE_XREF (
  
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,	
    AREA_ID NUMBER NOT NULL REFERENCES LOC_DATA.ENVIRONMENTAL_REVIEW_AREA (AREA_ID) ON DELETE CASCADE,  
    IS_ACCEPTABLE CHAR(1) CHECK (IS_ACCEPTABLE IN ('Y', 'N')),  
    IS_REPAIR_IDENTIFIED CHAR(1) CHECK (IS_REPAIR_IDENTIFIED IN ('Y', 'N')) ,  
    IS_ACCESSIBILITY_ISSUE_IDENTIFIED CHAR(1) CHECK (IS_ACCESSIBILITY_ISSUE_IDENTIFIED IN ('Y', 'N')) ,  
    COMMENTS CLOB, 
    PRIMARY KEY (ASSESSMENT_ID, AREA_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

CREATE TABLE LOC_DATA.EVIDENCE_OF_INSECT_OTHER_PEST
(
   EVIDENCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
   ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
   	IS_EVIDENCE_OF_INSECT CHAR(1) CHECK (IS_EVIDENCE_OF_INSECT IN ('Y', 'N')) ,
    IS_EVIDENCE_OF_PEST CHAR(1) CHECK (IS_EVIDENCE_OF_PEST IN ('Y', 'N')),
	COMMENTS CLOB,
	 IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  

   

--Master Reference Table 

-----------RENAMED  HAS_ANIMALS  TO HAS_ANIMALS_IN_HOME

CREATE TABLE LOC_DATA.HOME_ASSESSMENT (

    HOME_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    HOME_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.HOME_TYPE(HOME_TYPE_ID) ON DELETE CASCADE,  
    HOME_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.HOME_LEVEL_TYPE(HOME_LEVEL_ID) ON DELETE CASCADE,  
    OWNERSHIP_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.HOME_OWNERSHIP_STATUS(OWNERSHIP_STATUS_ID) ON DELETE CASCADE,  
    PROPERTY_OWNER VARCHAR2(255), 
    APARTMENT_FLOOR VARCHAR2(20),  
    HAS_ANIMALS_IN_HOME CHAR(1) DEFAULT 'N' CHECK (HAS_ANIMALS_IN_HOME IN ('Y', 'N')),  
    ANIMALS_TYPE_NUMBER_COMMENTS CLOB,  
    RESIDENTIAL_STABILITY_ID NUMBER NOT NULL REFERENCES LOC_DATA.RESIDENTIAL_STABILITY_STATUS(STABILITY_ID) ON DELETE CASCADE,  
    RESIDENTIAL_STABILITY_COMMENT CLOB,
    SAFETY_ID NUMBER NOT NULL REFERENCES LOC_DATA.NEIGHBORHOOD_SAFETY_LEVEL (SAFETY_ID) ON DELETE CASCADE,  
    SAFETY_LEVEL_COMMENT CLOB,
    COMMENTS CLOB,
	OTHER_HOME_TYPE VARCHAR2(100),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);  


--------------------------------------------------------------------------------------------------------------------------
---------SECTION L. SCHOOL AND WORK-----------------------------------------------------------------------------------

--Master table for Training Program Participation


CREATE TABLE LOC_DATA.TRAINING_PROGRAM_PARTICIPATION (

    TRAINING_PARTICIPATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PARTICIPATION_STATUS VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined statuses
INSERT INTO LOC_DATA.TRAINING_PROGRAM_PARTICIPATION (PARTICIPATION_STATUS) VALUES ('CURRENTLY PARTICIPATING');
INSERT INTO LOC_DATA.TRAINING_PROGRAM_PARTICIPATION (PARTICIPATION_STATUS) VALUES ('NEVER PARTICIPATED');
INSERT INTO LOC_DATA.TRAINING_PROGRAM_PARTICIPATION (PARTICIPATION_STATUS) VALUES ('PARTICIPATED IN THE PAST');

--Master table for Employment status


CREATE TABLE LOC_DATA.EMPLOYMENT_STATUS (

    EMPLOYMENT_STATUS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMPLOYMENT_STATUS_NAME VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined employment statuses
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Not Employed');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Employed Full-Time');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Employed Part-Time');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Seeking Employment');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Retired');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Not Interested in Employment');
INSERT INTO LOC_DATA.EMPLOYMENT_STATUS (EMPLOYMENT_STATUS_NAME) VALUES ('Participating in Pre-Employment Activities/Supports');


--Master table for Employment Interests


CREATE TABLE LOC_DATA.EMPLOYMENT_INTEREST (

    INTEREST_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    INTEREST_LEVEL VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined employment interest levels
INSERT INTO LOC_DATA.EMPLOYMENT_INTEREST (INTEREST_LEVEL) VALUES ('Interested in Working');
INSERT INTO LOC_DATA.EMPLOYMENT_INTEREST (INTEREST_LEVEL) VALUES ('Not Interested in Working');
INSERT INTO LOC_DATA.EMPLOYMENT_INTEREST (INTEREST_LEVEL) VALUES ('Interested in Working but Needs Employment Support');

--Master Table Volunteer status


CREATE TABLE LOC_DATA.VOLUNTEER_STATUS (

    VOLUNTEER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    VOLUNTEER_STATUS_NAME VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined volunteer statuses
INSERT INTO LOC_DATA.VOLUNTEER_STATUS (VOLUNTEER_STATUS_NAME) VALUES ('Does Not Volunteer');
INSERT INTO LOC_DATA.VOLUNTEER_STATUS (VOLUNTEER_STATUS_NAME) VALUES ('Volunteers Periodically');
INSERT INTO LOC_DATA.VOLUNTEER_STATUS (VOLUNTEER_STATUS_NAME) VALUES ('Interested in Volunteering');


---Primary Reference Table


CREATE TABLE LOC_DATA.SCHOOL_WORK_ASSESSMENT (
    SCHOOL_WORK_ASSESSMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    EDUCATION_LEVEL VARCHAR2(255) NOT NULL,
    TRAINING_PARTICIPATION_ID NUMBER NOT NULL REFERENCES LOC_DATA.TRAINING_PROGRAM_PARTICIPATION(TRAINING_PARTICIPATION_ID) ON DELETE CASCADE,
	TRAINING_PARTICIPATION_WHERE VARCHAR2(255), 
    EMPLOYMENT_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.EMPLOYMENT_STATUS(EMPLOYMENT_STATUS_ID) ON DELETE CASCADE,
	WHERE_EMPLOYED VARCHAR2(255),
    EMPLOYMENT_INTEREST_ID NUMBER NOT NULL REFERENCES LOC_DATA.EMPLOYMENT_INTEREST(INTEREST_ID) ON DELETE CASCADE,
    VOLUNTEER_STATUS_ID NUMBER NOT NULL REFERENCES LOC_DATA.VOLUNTEER_STATUS(VOLUNTEER_ID) ON DELETE CASCADE,
    COMMENTS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);

 

-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION M. SUPPORTS*----------------------------------------------------------------------------------- 


--Master Table Support Provider type 


CREATE TABLE LOC_DATA.SUPPORT_PROVIDER_TYPE (
 
    SUPPORT_PROVIDER_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    SUPPORT_PROVIDER_TYPE_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- Insert predefined provider types 

INSERT INTO LOC_DATA.SUPPORT_PROVIDER_TYPE (SUPPORT_PROVIDER_TYPE_NAME) VALUES ('Agency'); 
INSERT INTO LOC_DATA.SUPPORT_PROVIDER_TYPE (SUPPORT_PROVIDER_TYPE_NAME) VALUES ('Non-Agency'); 
INSERT INTO LOC_DATA.SUPPORT_PROVIDER_TYPE (SUPPORT_PROVIDER_TYPE_NAME) VALUES ('Unpaid Individual'); 

--Master table for Support Type 



CREATE TABLE LOC_DATA.SUPPORT_TYPE (
 
    SUPPORT_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    SUPPORT_TYPE_NAME VARCHAR2(255)  NOT NULL,
	SUPPORT_TYPE VARCHAR2(50)
); 

 
-- Insert predefined support types 

INSERT INTO LOC_DATA.SUPPORT_TYPE (SUPPORT_TYPE_NAME,SUPPORT_TYPE) VALUES ('Natural (Unpaid)','Natural'); 
INSERT INTO LOC_DATA.SUPPORT_TYPE (SUPPORT_TYPE_NAME,SUPPORT_TYPE) VALUES ('Formal (Paid)','Formal'); 
INSERT INTO LOC_DATA.SUPPORT_TYPE (SUPPORT_TYPE_NAME,SUPPORT_TYPE) VALUES ('Both','Natural'); 
INSERT INTO LOC_DATA.SUPPORT_TYPE (SUPPORT_TYPE_NAME,SUPPORT_TYPE) VALUES ('Both','Formal'); 

--Master Table for Support Services 



CREATE TABLE LOC_DATA.SUPPORT_SERVICE (
 
    SUPPORT_SERVICE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    SUPPORT_SERVICE_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- Insert predefined support services 

INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('PT/OT/ST');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Skilled Nursing Services'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Personal Care Services');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Homemaker Services'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Meal Preparation Services'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Laundry Services');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Shopping Services'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Transportation Services');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Psychological Services');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Managing Finances');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Respite'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Health Care (physician visits, med monitoring)'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Behavioral Management'); 
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Medication Administration');  
INSERT INTO LOC_DATA.SUPPORT_SERVICE (SUPPORT_SERVICE_NAME) VALUES ('Other'); 

--Master Table for Funding Source 



CREATE TABLE LOC_DATA.FUNDING_SOURCE (
 
    FUNDING_SOURCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    FUNDING_SOURCE_NAME VARCHAR2(255) UNIQUE NOT NULL
); 


-- Insert predefined funding sources 

INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Private Pay'); 
INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Medicaid');  
INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Medicare');  
INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Commercial Insurance');  
INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Older Americans Act');  
INSERT INTO LOC_DATA.FUNDING_SOURCE (FUNDING_SOURCE_NAME) VALUES ('Other'); 


--Primary Reference Table 



CREATE TABLE LOC_DATA.SUPPORT (
  
    SUPPORT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	SERVICES_CURRENTLY_BEING_PROVIDED_BY_NATURAL_OR_COMMUNITY CHAR(1)  DEFAULT 'Y' CHECK (SERVICES_CURRENTLY_BEING_PROVIDED_BY_NATURAL_OR_COMMUNITY IN ('Y', 'N')),
    PROVIDER_NAME VARCHAR2(255) NOT NULL, 
    SUPPORT_PROVIDER_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUPPORT_PROVIDER_TYPE(SUPPORT_PROVIDER_TYPE_ID) ON DELETE CASCADE, 
    SUPPORT_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUPPORT_TYPE(SUPPORT_TYPE_ID) ON DELETE CASCADE, 
    FUNDING_SOURCE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FUNDING_SOURCE(FUNDING_SOURCE_ID) ON DELETE CASCADE, 
    COMMENTS CLOB,
	OTHER_FUNDING_SOURCE VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 



--Reference Table for Support services 




CREATE TABLE LOC_DATA.ASSESSMENT_SUPPORT_SERVICE_XREF (

    SUPPORT_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUPPORT (SUPPORT_ID) ON DELETE CASCADE,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	SUPPORT_TYPE_ID  NUMBER NOT NULL REFERENCES LOC_DATA.SUPPORT_TYPE(SUPPORT_TYPE_ID) ON DELETE CASCADE, 
    SUPPORT_SERVICE_ID NUMBER NOT NULL REFERENCES LOC_DATA.SUPPORT_SERVICE(SUPPORT_SERVICE_ID) ON DELETE CASCADE, 
    SERVICE_FREQUENCY VARCHAR2(255) NULL,
    PRIMARY KEY (SUPPORT_ID,SUPPORT_SERVICE_ID,ASSESSMENT_ID,SUPPORT_TYPE_ID),
	OTHER_SUPPORT_SERVICE VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
);




 --------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
---------SECTION N. PRIMARY CAREGIVER ASSESSMENT*-----------------------------------------------------------------------------------

--Master table Caregver Frquency


CREATE TABLE LOC_DATA.CAREGIVING_FREQUENCY (

    FREQUENCY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FREQUENCY_LEVEL VARCHAR2(255) UNIQUE NOT NULL

);

-- Insert predefined caregiving frequency levels
INSERT INTO LOC_DATA.CAREGIVING_FREQUENCY (FREQUENCY_LEVEL) VALUES ('Daily');
INSERT INTO LOC_DATA.CAREGIVING_FREQUENCY (FREQUENCY_LEVEL) VALUES ('Weekly');
INSERT INTO LOC_DATA.CAREGIVING_FREQUENCY (FREQUENCY_LEVEL) VALUES ('Monthly');
INSERT INTO LOC_DATA.CAREGIVING_FREQUENCY (FREQUENCY_LEVEL) VALUES ('Less than once per month');

--Master Table Caraegiver Employment Status


CREATE TABLE LOC_DATA.CAREGIVER_EMPLOYMENT_STATUS (

    EMPLOYMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMPLOYMENT_STATUS VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined employment statuses
INSERT INTO LOC_DATA.CAREGIVER_EMPLOYMENT_STATUS (EMPLOYMENT_STATUS) VALUES ('Full-time');
INSERT INTO LOC_DATA.CAREGIVER_EMPLOYMENT_STATUS (EMPLOYMENT_STATUS) VALUES ('Part-time');
INSERT INTO LOC_DATA.CAREGIVER_EMPLOYMENT_STATUS (EMPLOYMENT_STATUS) VALUES ('Not Employed');

--Master Table Caregiver Education Status


CREATE TABLE LOC_DATA.CAREGIVER_EDUCATION_STATUS (

    EDUCATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EDUCATION_STATUS VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined education statuses
INSERT INTO LOC_DATA.CAREGIVER_EDUCATION_STATUS (EDUCATION_STATUS) VALUES ('Full-time Student');
INSERT INTO LOC_DATA.CAREGIVER_EDUCATION_STATUS (EDUCATION_STATUS) VALUES ('Part-time Student');
INSERT INTO LOC_DATA.CAREGIVER_EDUCATION_STATUS (EDUCATION_STATUS) VALUES ('Not in School');


--Master Table for Caregiver Support Needs 


CREATE TABLE LOC_DATA.CAREGIVER_SUPPORT_NEED (

    SUPPORT_NEED_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SUPPORT_TOPIC VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined support topics
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('How to care for yourself while caring for others');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Individual counseling options');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Legal and financial issues, powers of attorney, living will');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('In-home support services');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Choosing a long-term care facility');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Coordinating the individual’s medical care');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Online information and supports');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Short-term respite care in a facility');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Skills training for personal care tasks');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Support groups');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES ('Long-term care options - insurance/other benefits');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('More information about care recipients disease/condition');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('How to provide care to an aging individual');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('Meeting other families that have individuals with similar needs');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('How to get other family members to help');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('Finding or working with doctors or specialist');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('Coordinating and making appointments with individual’s social service agency');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('Home safety or home modifications or equipment');
INSERT INTO LOC_DATA.CAREGIVER_SUPPORT_NEED (SUPPORT_TOPIC) VALUES('Other');
  
  
  CREATE TABLE LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE
  (
     DISTANCE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	 DISTANCE_MILES VARCHAR(20)
	 );
  
  INSERT INTO LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE (DISTANCE_MILES) VALUES ('0-10 miles');
  INSERT INTO LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE (DISTANCE_MILES) VALUES ('11-40 miles');
  INSERT INTO LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE (DISTANCE_MILES) VALUES ('41-100 miles');
  INSERT INTO LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE (DISTANCE_MILES) VALUES ('Over 100 miles');
  
  
--Primary Master Reference Table


CREATE TABLE LOC_DATA.CAREGIVER_ASSESSMENT (

    CAREGIVER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	HAVE_PRIMARY_CAREGIVER CHAR(1) DEFAULT 'Y' CHECK (HAVE_PRIMARY_CAREGIVER IN ('Y', 'N')),
    PRIMARY_CAREGIVER_NAME VARCHAR2(255) NOT NULL,
	CAREGIVER_TRAINED CHAR(1) CHECK (CAREGIVER_TRAINED IN ('Y', 'N')),
	IS_PAID_CAREGIVER CHAR(1) CHECK (IS_PAID_CAREGIVER IN ('Y', 'N')),
	CHILDREN_YOUNGER_THAN_18 CHAR(1) CHECK (CHILDREN_YOUNGER_THAN_18 IN ('Y', 'N')),
	ALSO_PROVIDING_CARE_TO_OTHER_INDIVIDUALS CHAR(1) CHECK (ALSO_PROVIDING_CARE_TO_OTHER_INDIVIDUALS IN ('Y', 'N')),
	ANOTHER_PERSON_AVAILABLE CHAR(1) CHECK (ANOTHER_PERSON_AVAILABLE IN ('Y', 'N')),
	DISTANCE_ID NUMBER REFERENCES LOC_DATA.CARE_RECEPIENTS_HOME_DISTANCE(DISTANCE_ID) ON DELETE CASCADE, 
    CAREGIVING_FREQUENCY_ID NUMBER REFERENCES LOC_DATA.CAREGIVING_FREQUENCY(FREQUENCY_ID) ON DELETE CASCADE,
    ANOTHER_CAREGIVER_NAME_AND_RELATIONSHIP VARCHAR2(100),
    CAREGIVING_DURATION_YEAR NUMBER,
    CAREGIVING_DURATION_MONTH NUMBER,
    CAREGIVER_EMPLOYMENT_ID NUMBER  REFERENCES LOC_DATA.CAREGIVER_EMPLOYMENT_STATUS (EMPLOYMENT_ID) ON DELETE CASCADE,
    CAREGIVER_EDUCATION_ID NUMBER  REFERENCES LOC_DATA.CAREGIVER_EDUCATION_STATUS(EDUCATION_ID) ON DELETE CASCADE,
    HAS_RECEIVED_SUPPORT_SERVICES_IN_THE_PAST CHAR(1) CHECK (HAS_RECEIVED_SUPPORT_SERVICES_IN_THE_PAST IN ('Y', 'N')) ,   
    OTHER_DETAILS VARCHAR2(255) NULL,    
    COMMENTS CLOB,
    OTHER_NEEDED_INFORMATION_EDUCATION_TRAINING VARCHAR2(255),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);




CREATE TABLE LOC_DATA.ASSESSMENT_CAREGIVER_SUPPORT_NEED_XREF (

	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    CAREGIVER_ID NUMBER NOT NULL REFERENCES LOC_DATA.CAREGIVER_ASSESSMENT(CAREGIVER_ID) ON DELETE CASCADE,
    SUPPORT_NEED_ID NUMBER NOT NULL REFERENCES LOC_DATA.CAREGIVER_SUPPORT_NEED(SUPPORT_NEED_ID) ON DELETE CASCADE,
    PRIMARY KEY (CAREGIVER_ID, SUPPORT_NEED_ID,ASSESSMENT_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


-- Table for Assessor observations


CREATE TABLE LOC_DATA.ASSESSOR_OBSERVATION (

    OBSERVATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    CAREGIVER_SUPPORT_CONCERNS CHAR(1) CHECK (CAREGIVER_SUPPORT_CONCERNS IN ('Y', 'N')),
    OTHER_CONCERNS CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

);


CREATE TABLE LOC_DATA.CAREGIVER_CONCERN (
 
    CAREGIVER_CONCERN_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CAREGIVER_CONCERN_NAME VARCHAR(100)
);
 
  INSERT INTO LOC_DATA.CAREGIVER_CONCERN (CAREGIVER_CONCERN_NAME) VALUES ('Caregiver has history or evidence of substance abuse');
  INSERT INTO LOC_DATA.CAREGIVER_CONCERN (CAREGIVER_CONCERN_NAME) VALUES ('Caregiver has a history of evidence of mental health issues');
 
--Junction Table for caregiver's history of evidence

CREATE TABLE LOC_DATA.ASSESSMENT_CAREGIVER_CONCERN_XREF
 (
 
    CAREGIVER_CONCERN_ID  NUMBER REFERENCES LOC_DATA.CAREGIVER_CONCERN(CAREGIVER_CONCERN_ID) ON DELETE CASCADE,
    ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    PRIMARY KEY(ASSESSMENT_ID,CAREGIVER_CONCERN_ID),
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
   
);
 
 

--------------------------------------------------------------------------------------------------------------------------
---------SECTION O. LOC RECOMMENDATION-----------------------------------------------------------------------------------

--Master table for LOC level



CREATE TABLE LOC_DATA.RECOMMENDATION_LEVEL

(

    RECOMMENDATION_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RECOMMENDATION_LEVEL_NAME VARCHAR2(255) UNIQUE NOT NULL
);

-- Insert predefined LOC levels

INSERT INTO LOC_DATA.RECOMMENDATION_LEVEL (RECOMMENDATION_LEVEL_NAME) VALUES ('None');
INSERT INTO LOC_DATA.RECOMMENDATION_LEVEL (RECOMMENDATION_LEVEL_NAME) VALUES ('Protective');
INSERT INTO LOC_DATA.RECOMMENDATION_LEVEL (RECOMMENDATION_LEVEL_NAME) VALUES ('Intermediate');
INSERT INTO LOC_DATA.RECOMMENDATION_LEVEL (RECOMMENDATION_LEVEL_NAME) VALUES ('Skilled');
INSERT INTO LOC_DATA.RECOMMENDATION_LEVEL (RECOMMENDATION_LEVEL_NAME) VALUES ('Appears to have indications of Developmental Disabilities/Requires DD Review');


CREATE TABLE LOC_DATA.ASSESSMENT_OUTCOME
(
ASSESSMENT_OUTCOME_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
ASSESSMENT_OUTCOME_VALUE VARCHAR(255)
);

INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('LOC Completed');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('ReAssessment - Continued PASSPORT HCBS');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Updated Information');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Referred to Community Resources');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Pending Enrollment');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Assessment Canceled/ Not Completed');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('PASSPORT HCBS Enrollment');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('ReAssessment - Continued AL HCBS');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Assisted Living HCBS Enrollment');
INSERT INTO LOC_DATA.ASSESSMENT_OUTCOME (ASSESSMENT_OUTCOME_VALUE) VALUES('Continued on Managed Enrollment');




--Primary Reference Table

CREATE TABLE LOC_DATA.RECOMMENDATION (

    LOC_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
	ASSESSMENT_OUTCOME_ID NUMBER NOT NULL REFERENCES LOC_DATA.ASSESSMENT_OUTCOME(ASSESSMENT_OUTCOME_ID) ON DELETE CASCADE,
	RECOMMENDATION_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.RECOMMENDATION_LEVEL(RECOMMENDATION_LEVEL_ID) ON DELETE CASCADE,
	RECOMMENDED_LOC VARCHAR2(255),
	REASON_FOR_ADJUSTMENT CLOB,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

CREATE TABLE LOC_DATA.FINALIZATION
(
    FINALIZATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,
    FINALIZED CHAR(1) DEFAULT 'Y' CHECK (FINALIZED IN ('Y', 'N')),
	ASSESSOR_NAME VARCHAR2(100),
	TITLE_OF_ASSESSOR VARCHAR2(100),
	FINALIZED_DATE DATE ,
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

	
-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION P. CERTIFICATION----------------------------------------------------------------------------------- 


CREATE TABLE LOC_DATA.LOC_CERTIFICATION_LEVEL (
 
    CERTIFIED_LOC_LEVEL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    CERTIFIED_LOC_NAME VARCHAR2(255) UNIQUE NOT NULL
); 

-- Insert predefined LOC levels 

INSERT INTO LOC_DATA.LOC_CERTIFICATION_LEVEL (CERTIFIED_LOC_NAME) VALUES ('None');  
INSERT INTO LOC_DATA.LOC_CERTIFICATION_LEVEL (CERTIFIED_LOC_NAME) VALUES ('Protective');  
INSERT INTO LOC_DATA.LOC_CERTIFICATION_LEVEL (CERTIFIED_LOC_NAME) VALUES ('Intermediate'); 
INSERT INTO LOC_DATA.LOC_CERTIFICATION_LEVEL (CERTIFIED_LOC_NAME) VALUES ('Skilled');  
INSERT INTO LOC_DATA.LOC_CERTIFICATION_LEVEL (CERTIFIED_LOC_NAME) VALUES ('Intermediate/Developmental Disabilities');  

--Primary Reference Table 



CREATE TABLE LOC_DATA.LOC_CERTIFICATION (
  
    CERTIFICATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  
    --PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT (PARTICIPANT_ID) ON DELETE CASCADE,  
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    CERTIFIED_LOC_LEVEL_ID NUMBER NOT NULL REFERENCES LOC_DATA.LOC_CERTIFICATION_LEVEL(CERTIFIED_LOC_LEVEL_ID) ON DELETE CASCADE,    
    CERTIFICATION_SIGNATURE VARCHAR2(255),
    CERTIFICATION_DATE DATE DEFAULT SYSTIMESTAMP,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 

-------------------------------------------------------------------------------------------------------------------------- 

-------------------------------------------------------------------------------------------------------------------------- 

---------SECTION PAA USER ONLY----------------------------------------------------------------------------------- 


CREATE TABLE LOC_DATA.VERBAL_AUTHORIZATION (
 
    AUTHORIZATION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    CERTIFICATION_ID NUMBER NOT NULL REFERENCES LOC_DATA.LOC_CERTIFICATION (CERTIFICATION_ID) ON DELETE CASCADE, 
    --PARTICIPANT_ID NUMBER NOT NULL REFERENCES LOC_DATA.PARTICIPANT (PARTICIPANT_ID) ON DELETE CASCADE, 
	ASSESSMENT_ID NUMBER REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE,
    AUTHORIZATION_DATE DATE NOT NULL, 
    PAA_ASSESSOR_SIGNATURE VARCHAR2(255) NOT NULL,
    IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP

); 


-------------------Documentation table for CA and LOC--------------------------


 
CREATE TABLE LOC_DATA.ADDITIONAL_DOCUMENT
   (	
    DOCUMENT_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY  NOT NULL, 
	ASSESSMENT_ID NUMBER NOT NULL REFERENCES LOC_DATA.ASSESSMENT(ASSESSMENT_ID) ON DELETE CASCADE, 
	FORM_TYPE_ID NUMBER NOT NULL REFERENCES LOC_DATA.FORM_TYPE(FORM_TYPE_ID) ON DELETE CASCADE,-----WHERE ID=1 for CA and 2 for LOC
	CATEGORY_ID NUMBER, 
	DOCUMENT_NAME VARCHAR2(100) NOT NULL, 
	DOCUMENT_TYPE VARCHAR2(25) NOT NULL, 
	URL VARCHAR2(75), 
	BASE64DATA CLOB,  
	IS_ACTIVE NUMBER(1),
    CREATED_BY NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP,
    UPDATED_BY NUMBER,
    UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP
	);		